{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6","program":"C:\\Users\\Alan\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","mio","--edition=2018","C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","--cfg","feature=\"os-util\"","--cfg","feature=\"tcp\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","-C","metadata=11b1adecd80618ee","-C","extra-filename=-11b1adecd80618ee","--out-dir","c:\\Users\\Alan\\Documents\\Advent2020\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Alan\\Documents\\Advent2020\\target\\rls\\debug\\deps","--extern","log=c:\\Users\\Alan\\Documents\\Advent2020\\target\\rls\\debug\\deps\\liblog-91dc4d131d09e795.rmeta","--extern","miow=c:\\Users\\Alan\\Documents\\Advent2020\\target\\rls\\debug\\deps\\libmiow-604a1b9d62731ff1.rmeta","--extern","ntapi=c:\\Users\\Alan\\Documents\\Advent2020\\target\\rls\\debug\\deps\\libntapi-490496b64d05cfed.rmeta","--extern","winapi=c:\\Users\\Alan\\Documents\\Advent2020\\target\\rls\\debug\\deps\\libwinapi-a7faeaf4f8860734.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Alan\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Alan\\Documents\\Advent2020\\target\\rls\\debug\\deps\\libmio-11b1adecd80618ee.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[10812154465601740473,2651036112032979095]},"crate_root":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src","external_crates":[{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[1921591330338517602,8002743023817837766]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3294562336267099064,32966444439847392]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8997478989526601172,15466949633016966289]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2630917957276446109,8658156290826251556]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16592919627580665262,9528133364691589515]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12745094628986209607,10518202857406436678]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12421643217715303902,5448498891032173630]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10471275659107711445,16777480585464664117]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5556840401016198219,10246883469141694681]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5351773000290944944,5461204872568622329]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1406896991597352872,16715998803959789672]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[16017799561494711091,10322761666972095232]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","num":13,"id":{"name":"log","disambiguator":[15379110767755223413,5996927049130175394]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","num":14,"id":{"name":"cfg_if","disambiguator":[3867657372731410738,4213284747709546304]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","num":15,"id":{"name":"ntapi","disambiguator":[17555746520444221736,11036547712315662288]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","num":16,"id":{"name":"winapi","disambiguator":[202375922292912647,578484487254422756]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\event.rs","num":17,"id":{"name":"miow","disambiguator":[11347734932451522173,799697643422909124]}},{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\event.rs","num":18,"id":{"name":"socket2","disambiguator":[5440080073834930164,12806161222623184251]}}],"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":0,"byte_end":9507,"line_start":1,"line_end":265,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\mod.rs","byte_start":52483,"byte_end":52488,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\mod.rs","byte_start":52513,"byte_end":52519,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\mod.rs","byte_start":52521,"byte_end":52525,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\mod.rs","byte_start":52550,"byte_end":52556,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221309,"byte_end":8221320,"line_start":11,"line_end":11,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":953}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221322,"byte_end":8221331,"line_start":11,"line_end":11,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":953}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221333,"byte_end":8221342,"line_start":11,"line_end":11,"column_start":45,"column_end":54},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":953}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221344,"byte_end":8221356,"line_start":11,"line_end":11,"column_start":56,"column_end":68},"alias_span":null,"name":"TcpKeepalive","value":"","parent":{"krate":0,"index":953}},{"kind":"Use","ref_id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221388,"byte_end":8221397,"line_start":14,"line_end":14,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":953}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1486,"byte_end":1492,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1512,"byte_end":1520,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1537,"byte_end":1541,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1543,"byte_end":1551,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1569,"byte_end":1574,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1569,"byte_end":1574,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1591,"byte_end":1596,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2151,"byte_end":2160,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"NamedPipe","value":"","parent":{"krate":0,"index":165}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":0,"byte_end":9507,"line_start":1,"line_end":265,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":35},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":84},{"krate":0,"index":896},{"krate":0,"index":953},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":1924},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":168}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unused_imports, dead_code)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":53,"byte_end":173,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":360,"byte_end":439,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":440,"byte_end":520,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":521,"byte_end":571,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":572,"byte_end":575,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":576,"byte_end":587,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":588,"byte_end":591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":592,"byte_end":671,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":672,"byte_end":749,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":750,"byte_end":753,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":754,"byte_end":788,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":789,"byte_end":792,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":793,"byte_end":830,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":831,"byte_end":878,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":879,"byte_end":882,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":883,"byte_end":898,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":899,"byte_end":902,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":903,"byte_end":980,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":981,"byte_end":993,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":994,"byte_end":997,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":998,"byte_end":1067,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1068,"byte_end":1071,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1072,"byte_end":1084,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1085,"byte_end":1088,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1089,"byte_end":1154,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1155,"byte_end":1158,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1159,"byte_end":1184,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1185,"byte_end":1188,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1189,"byte_end":1257,"line_start":42,"line_end":42,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11941,"byte_end":11949,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11302,"byte_end":11335,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11336,"byte_end":11339,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11340,"byte_end":11417,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11418,"byte_end":11497,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11498,"byte_end":11574,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11575,"byte_end":11626,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11627,"byte_end":11630,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11631,"byte_end":11686,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11687,"byte_end":11735,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11736,"byte_end":11766,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11767,"byte_end":11831,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":11832,"byte_end":11874,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":12482,"byte_end":12490,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":12406,"byte_end":12467,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":12641,"byte_end":12649,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":12565,"byte_end":12626,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13661,"byte_end":13664,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13210,"byte_end":13242,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13247,"byte_end":13250,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13255,"byte_end":13323,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13328,"byte_end":13350,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13355,"byte_end":13358,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13363,"byte_end":13370,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13375,"byte_end":13397,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13402,"byte_end":13405,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13410,"byte_end":13485,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13490,"byte_end":13540,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13545,"byte_end":13586,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13591,"byte_end":13598,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13603,"byte_end":13643,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14595,"byte_end":14601,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"pub fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13797,"byte_end":13840,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13845,"byte_end":13848,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13853,"byte_end":13921,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13926,"byte_end":13929,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13934,"byte_end":13941,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13946,"byte_end":13968,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13973,"byte_end":13976,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":13981,"byte_end":14059,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14064,"byte_end":14067,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14072,"byte_end":14133,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14138,"byte_end":14208,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14213,"byte_end":14252,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14257,"byte_end":14295,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14300,"byte_end":14303,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14308,"byte_end":14370,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14375,"byte_end":14435,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14440,"byte_end":14443,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14448,"byte_end":14510,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14515,"byte_end":14571,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14576,"byte_end":14583,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14802,"byte_end":14813,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14726,"byte_end":14784,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14956,"byte_end":14967,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":14880,"byte_end":14938,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15105,"byte_end":15111,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15034,"byte_end":15087,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15244,"byte_end":15250,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15173,"byte_end":15226,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25243,"byte_end":25247,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":16949,"byte_end":17005,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17006,"byte_end":17009,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17010,"byte_end":17086,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17087,"byte_end":17166,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17167,"byte_end":17245,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17246,"byte_end":17316,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17317,"byte_end":17331,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17332,"byte_end":17335,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17336,"byte_end":17414,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17415,"byte_end":17487,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17488,"byte_end":17563,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17564,"byte_end":17640,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17641,"byte_end":17718,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17719,"byte_end":17793,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17794,"byte_end":17836,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17837,"byte_end":17840,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17841,"byte_end":17889,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17890,"byte_end":17943,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":17944,"byte_end":17999,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18000,"byte_end":18054,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18055,"byte_end":18058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18059,"byte_end":18073,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18074,"byte_end":18077,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18078,"byte_end":18139,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18140,"byte_end":18143,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18293,"byte_end":18321,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18322,"byte_end":18369,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18370,"byte_end":18415,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18416,"byte_end":18444,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18445,"byte_end":18448,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18449,"byte_end":18486,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18487,"byte_end":18490,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18491,"byte_end":18533,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18534,"byte_end":18584,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18585,"byte_end":18632,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18633,"byte_end":18636,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18637,"byte_end":18714,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18715,"byte_end":18747,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18748,"byte_end":18797,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18798,"byte_end":18801,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18802,"byte_end":18827,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18828,"byte_end":18891,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18892,"byte_end":18895,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18896,"byte_end":18934,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":18935,"byte_end":19029,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19030,"byte_end":19033,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19034,"byte_end":19110,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19111,"byte_end":19142,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19143,"byte_end":19153,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19154,"byte_end":19192,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19193,"byte_end":19196,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19197,"byte_end":19227,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19228,"byte_end":19293,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19294,"byte_end":19373,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19374,"byte_end":19400,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19401,"byte_end":19431,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19432,"byte_end":19445,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19446,"byte_end":19455,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19456,"byte_end":19461,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19462,"byte_end":19469,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19470,"byte_end":19477,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19478,"byte_end":19481,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19482,"byte_end":19499,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19500,"byte_end":19503,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19504,"byte_end":19580,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19581,"byte_end":19643,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19644,"byte_end":19647,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19648,"byte_end":19671,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19672,"byte_end":19675,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19676,"byte_end":19745,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19746,"byte_end":19815,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19816,"byte_end":19894,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19895,"byte_end":19969,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":19970,"byte_end":20005,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20006,"byte_end":20009,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20010,"byte_end":20086,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20087,"byte_end":20165,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20166,"byte_end":20179,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20180,"byte_end":20183,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20184,"byte_end":20210,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20211,"byte_end":20214,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20215,"byte_end":20290,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20291,"byte_end":20369,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20370,"byte_end":20448,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20449,"byte_end":20502,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20503,"byte_end":20506,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20507,"byte_end":20557,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20558,"byte_end":20561,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20562,"byte_end":20590,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20591,"byte_end":20594,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20595,"byte_end":20669,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20670,"byte_end":20748,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20749,"byte_end":20821,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20822,"byte_end":20896,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20897,"byte_end":20974,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":20975,"byte_end":21046,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21047,"byte_end":21118,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21119,"byte_end":21197,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21198,"byte_end":21272,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21273,"byte_end":21306,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21307,"byte_end":21310,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21311,"byte_end":21391,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21392,"byte_end":21461,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21462,"byte_end":21539,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21540,"byte_end":21586,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21587,"byte_end":21590,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21591,"byte_end":21653,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21654,"byte_end":21716,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21717,"byte_end":21773,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21774,"byte_end":21842,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21843,"byte_end":21913,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21914,"byte_end":21917,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21918,"byte_end":21945,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21946,"byte_end":21949,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":21950,"byte_end":22022,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22023,"byte_end":22100,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22101,"byte_end":22112,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22113,"byte_end":22116,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22117,"byte_end":22133,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22134,"byte_end":22137,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22287,"byte_end":22315,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22316,"byte_end":22335,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22336,"byte_end":22383,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22384,"byte_end":22421,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22422,"byte_end":22450,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22451,"byte_end":22480,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22481,"byte_end":22509,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22510,"byte_end":22530,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22531,"byte_end":22534,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22535,"byte_end":22588,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22589,"byte_end":22641,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22642,"byte_end":22705,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22706,"byte_end":22709,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22710,"byte_end":22752,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22753,"byte_end":22756,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22757,"byte_end":22785,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22786,"byte_end":22789,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22790,"byte_end":22868,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22869,"byte_end":22886,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22887,"byte_end":22979,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22980,"byte_end":22996,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":22997,"byte_end":23004,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23005,"byte_end":23012,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23013,"byte_end":23016,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23017,"byte_end":23040,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23041,"byte_end":23044,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23045,"byte_end":23123,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23124,"byte_end":23203,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23204,"byte_end":23284,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23285,"byte_end":23362,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23363,"byte_end":23407,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23408,"byte_end":23411,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23412,"byte_end":23458,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23459,"byte_end":23462,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23463,"byte_end":23489,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23490,"byte_end":23493,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23494,"byte_end":23564,"line_start":168,"line_end":168,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23565,"byte_end":23568,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23569,"byte_end":23602,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23603,"byte_end":23636,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23637,"byte_end":23670,"line_start":172,"line_end":172,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23671,"byte_end":23704,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23705,"byte_end":23738,"line_start":174,"line_end":174,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23739,"byte_end":23772,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23773,"byte_end":23806,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23807,"byte_end":23840,"line_start":177,"line_end":177,"column_start":1,"column_end":34}},{"value":"/ | Solaris       | [epoll]   |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23841,"byte_end":23874,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23875,"byte_end":23908,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23909,"byte_end":23942,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23943,"byte_end":23976,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":23977,"byte_end":24010,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24011,"byte_end":24014,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24015,"byte_end":24089,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24090,"byte_end":24165,"line_start":185,"line_end":185,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24166,"byte_end":24239,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24240,"byte_end":24320,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24321,"byte_end":24349,"line_start":188,"line_end":188,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24350,"byte_end":24353,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24354,"byte_end":24432,"line_start":190,"line_end":190,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24433,"byte_end":24512,"line_start":191,"line_end":191,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24513,"byte_end":24593,"line_start":192,"line_end":192,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24594,"byte_end":24665,"line_start":193,"line_end":193,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24666,"byte_end":24746,"line_start":194,"line_end":194,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24747,"byte_end":24823,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24824,"byte_end":24835,"line_start":196,"line_end":196,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24836,"byte_end":24839,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24840,"byte_end":24902,"line_start":198,"line_end":198,"column_start":1,"column_end":63}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24903,"byte_end":24975,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365198(v=vs.85).aspx","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":24976,"byte_end":25067,"line_start":200,"line_end":200,"column_start":1,"column_end":92}},{"value":"/ [`signalfd`]: http://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25068,"byte_end":25138,"line_start":201,"line_end":201,"column_start":1,"column_end":71}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25139,"byte_end":25182,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25183,"byte_end":25231,"line_start":203,"line_end":203,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25317,"byte_end":25325,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25277,"byte_end":25305,"line_start":208,"line_end":208,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25476,"byte_end":25484,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25376,"byte_end":25438,"line_start":214,"line_end":214,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25443,"byte_end":25464,"line_start":215,"line_end":215,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29406,"byte_end":29410,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25541,"byte_end":25570,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25575,"byte_end":25578,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25583,"byte_end":25658,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25663,"byte_end":25738,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25743,"byte_end":25816,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25821,"byte_end":25897,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25902,"byte_end":25966,"line_start":226,"line_end":226,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25971,"byte_end":25974,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25979,"byte_end":26056,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26061,"byte_end":26136,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26141,"byte_end":26214,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26219,"byte_end":26259,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26264,"byte_end":26267,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26272,"byte_end":26345,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26350,"byte_end":26426,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26431,"byte_end":26504,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26509,"byte_end":26583,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26588,"byte_end":26661,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26666,"byte_end":26700,"line_start":238,"line_end":238,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26705,"byte_end":26708,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26713,"byte_end":26779,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26784,"byte_end":26853,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26858,"byte_end":26917,"line_start":242,"line_end":242,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26922,"byte_end":26925,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":26930,"byte_end":27003,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27008,"byte_end":27020,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27025,"byte_end":27028,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27033,"byte_end":27081,"line_start":247,"line_end":247,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27086,"byte_end":27152,"line_start":248,"line_end":248,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27157,"byte_end":27223,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27228,"byte_end":27258,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27263,"byte_end":27315,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27320,"byte_end":27323,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27328,"byte_end":27339,"line_start":253,"line_end":253,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27344,"byte_end":27347,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27352,"byte_end":27426,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27431,"byte_end":27503,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27508,"byte_end":27538,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27543,"byte_end":27546,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27551,"byte_end":27565,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27570,"byte_end":27573,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27578,"byte_end":27639,"line_start":261,"line_end":261,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27644,"byte_end":27647,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27809,"byte_end":27837,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27842,"byte_end":27889,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27894,"byte_end":27939,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27944,"byte_end":27972,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27977,"byte_end":27980,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":27985,"byte_end":28029,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28034,"byte_end":28054,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28059,"byte_end":28062,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28067,"byte_end":28109,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28114,"byte_end":28164,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28169,"byte_end":28211,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28216,"byte_end":28260,"line_start":276,"line_end":276,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28265,"byte_end":28268,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28273,"byte_end":28315,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28320,"byte_end":28347,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28352,"byte_end":28384,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28389,"byte_end":28396,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28401,"byte_end":28404,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28409,"byte_end":28486,"line_start":283,"line_end":283,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28491,"byte_end":28523,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28528,"byte_end":28577,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28582,"byte_end":28585,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28590,"byte_end":28615,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28620,"byte_end":28667,"line_start":288,"line_end":288,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28672,"byte_end":28675,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28680,"byte_end":28718,"line_start":290,"line_end":290,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28723,"byte_end":28752,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28757,"byte_end":28777,"line_start":292,"line_end":292,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28782,"byte_end":28799,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28804,"byte_end":28854,"line_start":294,"line_end":294,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28859,"byte_end":28862,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28867,"byte_end":28943,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28948,"byte_end":28979,"line_start":297,"line_end":297,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28984,"byte_end":28994,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":28999,"byte_end":29037,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29042,"byte_end":29045,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29050,"byte_end":29080,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29085,"byte_end":29150,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29155,"byte_end":29234,"line_start":303,"line_end":303,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29239,"byte_end":29265,"line_start":304,"line_end":304,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29270,"byte_end":29300,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29305,"byte_end":29318,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29323,"byte_end":29332,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29337,"byte_end":29342,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29347,"byte_end":29354,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29359,"byte_end":29366,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29371,"byte_end":29374,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29379,"byte_end":29394,"line_start":312,"line_end":312,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":30840,"byte_end":30843,"line_start":353,"line_end":353,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35285,"byte_end":35293,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31293,"byte_end":31352,"line_start":375,"line_end":375,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31357,"byte_end":31360,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31365,"byte_end":31439,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31444,"byte_end":31519,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31524,"byte_end":31594,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31599,"byte_end":31602,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31607,"byte_end":31655,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31660,"byte_end":31663,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31668,"byte_end":31683,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31688,"byte_end":31691,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ `source: &S: event::Source`: This is the source of events that the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31696,"byte_end":31766,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31771,"byte_end":31834,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31839,"byte_end":31842,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31847,"byte_end":31921,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31926,"byte_end":32000,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32005,"byte_end":32073,"line_start":390,"line_end":390,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32078,"byte_end":32147,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32152,"byte_end":32179,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32184,"byte_end":32187,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32192,"byte_end":32261,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32266,"byte_end":32287,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32292,"byte_end":32295,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32300,"byte_end":32374,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32379,"byte_end":32453,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32458,"byte_end":32489,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32494,"byte_end":32497,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32502,"byte_end":32577,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32582,"byte_end":32636,"line_start":402,"line_end":402,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32641,"byte_end":32644,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32649,"byte_end":32725,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32730,"byte_end":32760,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32765,"byte_end":32768,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32773,"byte_end":32784,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32789,"byte_end":32792,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32797,"byte_end":32868,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32873,"byte_end":32945,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":32950,"byte_end":33019,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/ `register` is undefined behavior.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33024,"byte_end":33061,"line_start":412,"line_end":412,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33066,"byte_end":33069,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33074,"byte_end":33149,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33154,"byte_end":33229,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33234,"byte_end":33307,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33312,"byte_end":33380,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33385,"byte_end":33404,"line_start":418,"line_end":418,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33409,"byte_end":33412,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33417,"byte_end":33465,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33470,"byte_end":33512,"line_start":421,"line_end":421,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33517,"byte_end":33575,"line_start":422,"line_end":422,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33580,"byte_end":33638,"line_start":423,"line_end":423,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33643,"byte_end":33675,"line_start":424,"line_end":424,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33680,"byte_end":33683,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33688,"byte_end":33702,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33707,"byte_end":33710,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33872,"byte_end":33900,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33905,"byte_end":33924,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33929,"byte_end":33976,"line_start":432,"line_end":432,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":33981,"byte_end":34026,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34031,"byte_end":34059,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34064,"byte_end":34093,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34098,"byte_end":34137,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34142,"byte_end":34145,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34150,"byte_end":34182,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34187,"byte_end":34190,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34195,"byte_end":34248,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34253,"byte_end":34305,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34310,"byte_end":34375,"line_start":442,"line_end":442,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34380,"byte_end":34383,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34388,"byte_end":34426,"line_start":444,"line_end":444,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34431,"byte_end":34460,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34465,"byte_end":34485,"line_start":446,"line_end":446,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34490,"byte_end":34507,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34512,"byte_end":34562,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34567,"byte_end":34570,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34575,"byte_end":34624,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34629,"byte_end":34660,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34665,"byte_end":34710,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34715,"byte_end":34718,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34723,"byte_end":34733,"line_start":454,"line_end":454,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34738,"byte_end":34776,"line_start":455,"line_end":455,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34781,"byte_end":34784,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34789,"byte_end":34820,"line_start":457,"line_end":457,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34825,"byte_end":34860,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34865,"byte_end":34891,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34896,"byte_end":34905,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34910,"byte_end":34913,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34918,"byte_end":34960,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":34965,"byte_end":35014,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35019,"byte_end":35022,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35027,"byte_end":35057,"line_start":465,"line_end":465,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35062,"byte_end":35104,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35109,"byte_end":35172,"line_start":467,"line_end":467,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35177,"byte_end":35207,"line_start":468,"line_end":468,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35212,"byte_end":35225,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35230,"byte_end":35239,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35244,"byte_end":35249,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35254,"byte_end":35261,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35266,"byte_end":35273,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37961,"byte_end":37971,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35631,"byte_end":35693,"line_start":486,"line_end":486,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35698,"byte_end":35701,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35706,"byte_end":35775,"line_start":488,"line_end":488,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35780,"byte_end":35853,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35858,"byte_end":35934,"line_start":490,"line_end":490,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35939,"byte_end":35942,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":35947,"byte_end":36022,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36027,"byte_end":36103,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36108,"byte_end":36183,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36188,"byte_end":36217,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36222,"byte_end":36225,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36230,"byte_end":36306,"line_start":497,"line_end":497,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36311,"byte_end":36362,"line_start":498,"line_end":498,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36367,"byte_end":36370,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36375,"byte_end":36444,"line_start":500,"line_end":500,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36449,"byte_end":36519,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36524,"byte_end":36536,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36541,"byte_end":36544,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36549,"byte_end":36563,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36568,"byte_end":36571,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36733,"byte_end":36761,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36766,"byte_end":36785,"line_start":509,"line_end":509,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36790,"byte_end":36837,"line_start":510,"line_end":510,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36842,"byte_end":36879,"line_start":511,"line_end":511,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36884,"byte_end":36912,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36917,"byte_end":36946,"line_start":513,"line_end":513,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36951,"byte_end":36954,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36959,"byte_end":36987,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":36992,"byte_end":36995,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37000,"byte_end":37053,"line_start":517,"line_end":517,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37058,"byte_end":37110,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37115,"byte_end":37180,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37185,"byte_end":37188,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37193,"byte_end":37252,"line_start":521,"line_end":521,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37257,"byte_end":37286,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37291,"byte_end":37311,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37316,"byte_end":37333,"line_start":524,"line_end":524,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37338,"byte_end":37367,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37372,"byte_end":37375,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37380,"byte_end":37455,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37460,"byte_end":37510,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37515,"byte_end":37546,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37551,"byte_end":37571,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/     Token(2),","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37576,"byte_end":37593,"line_start":531,"line_end":531,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37598,"byte_end":37627,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37632,"byte_end":37648,"line_start":533,"line_end":533,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37653,"byte_end":37660,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37665,"byte_end":37672,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37677,"byte_end":37680,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37685,"byte_end":37733,"line_start":537,"line_end":537,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37738,"byte_end":37770,"line_start":538,"line_end":538,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37775,"byte_end":37829,"line_start":539,"line_end":539,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37834,"byte_end":37889,"line_start":540,"line_end":540,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":37894,"byte_end":37949,"line_start":541,"line_end":541,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40440,"byte_end":40450,"line_start":605,"line_end":605,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S: ?Sized>(&Self, &mut S) -> io::Result<()> where\nS: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38313,"byte_end":38374,"line_start":554,"line_end":554,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38379,"byte_end":38382,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38387,"byte_end":38463,"line_start":556,"line_end":556,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38468,"byte_end":38539,"line_start":557,"line_end":557,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38544,"byte_end":38618,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38623,"byte_end":38695,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38700,"byte_end":38776,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38781,"byte_end":38854,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38859,"byte_end":38872,"line_start":562,"line_end":562,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38877,"byte_end":38880,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38885,"byte_end":38961,"line_start":564,"line_end":564,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":38966,"byte_end":39017,"line_start":565,"line_end":565,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39022,"byte_end":39025,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39030,"byte_end":39093,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39098,"byte_end":39170,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is undefined.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39175,"byte_end":39225,"line_start":569,"line_end":569,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39230,"byte_end":39233,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39238,"byte_end":39252,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39257,"byte_end":39260,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39422,"byte_end":39450,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39455,"byte_end":39474,"line_start":576,"line_end":576,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39479,"byte_end":39526,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39531,"byte_end":39576,"line_start":578,"line_end":578,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39581,"byte_end":39609,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39614,"byte_end":39643,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39648,"byte_end":39676,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39681,"byte_end":39684,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39689,"byte_end":39721,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39726,"byte_end":39729,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39734,"byte_end":39787,"line_start":585,"line_end":585,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39792,"byte_end":39844,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39849,"byte_end":39914,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39919,"byte_end":39922,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39927,"byte_end":39965,"line_start":589,"line_end":589,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":39970,"byte_end":39999,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40004,"byte_end":40024,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40029,"byte_end":40046,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40051,"byte_end":40080,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40085,"byte_end":40088,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40093,"byte_end":40138,"line_start":595,"line_end":595,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40143,"byte_end":40146,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40151,"byte_end":40200,"line_start":597,"line_end":597,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40205,"byte_end":40208,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40213,"byte_end":40284,"line_start":599,"line_end":599,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40289,"byte_end":40347,"line_start":600,"line_end":600,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40352,"byte_end":40383,"line_start":601,"line_end":601,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40388,"byte_end":40404,"line_start":602,"line_end":602,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40409,"byte_end":40416,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40421,"byte_end":40428,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40847,"byte_end":40856,"line_start":617,"line_end":617,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40647,"byte_end":40696,"line_start":613,"line_end":613,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40701,"byte_end":40704,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40709,"byte_end":40782,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":40787,"byte_end":40835,"line_start":616,"line_end":616,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8192004,"byte_end":8192013,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"NamedPipe","qualname":"::sys::windows::named_pipe::NamedPipe","value":"NamedPipe {  }","parent":null,"children":[{"krate":0,"index":731}],"decl_id":null,"docs":" Non-blocking windows named pipe.","sig":null,"attributes":[{"value":"/ Non-blocking windows named pipe.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8189923,"byte_end":8189959,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8189960,"byte_end":8189963,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This structure internally contains a `HANDLE` which represents the named","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8189964,"byte_end":8190040,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ pipe, and also maintains state associated with the mio event loop and active","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190041,"byte_end":8190121,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ I/O operations that have been scheduled to translate IOCP to a readiness","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190122,"byte_end":8190198,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ model.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190199,"byte_end":8190209,"line_start":45,"line_end":45,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190210,"byte_end":8190213,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note, IOCP is a *completion* based model whereas mio is a *readiness* based","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190214,"byte_end":8190293,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ model. To bridge this, `NamedPipe` performs internal buffering. Writes are","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190294,"byte_end":8190372,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ written to an internal buffer and the buffer is submitted to IOCP. IOCP","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190373,"byte_end":8190448,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ reads are submitted using internal buffers and `NamedPipe::read` reads from","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190449,"byte_end":8190528,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ this internal buffer.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190529,"byte_end":8190554,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190555,"byte_end":8190558,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Trait implementations","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190559,"byte_end":8190586,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190587,"byte_end":8190590,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The `Read` and `Write` traits are implemented for `NamedPipe` and for","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190591,"byte_end":8190664,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ `&NamedPipe`. This represents that a named pipe can be concurrently read and","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190665,"byte_end":8190745,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ written to and also can be read and written to at all. Typically a named","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190746,"byte_end":8190822,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ pipe needs to be connected to a client before it can be read or written,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190823,"byte_end":8190899,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ however.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190900,"byte_end":8190912,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190913,"byte_end":8190916,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note that for I/O operations on a named pipe to succeed then the named pipe","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190917,"byte_end":8190996,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ needs to be associated with an event loop. Until this happens all I/O","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8190997,"byte_end":8191070,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ operations will return a \"would block\" error.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191071,"byte_end":8191120,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191121,"byte_end":8191124,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Managing connections","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191125,"byte_end":8191151,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191152,"byte_end":8191155,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The `NamedPipe` type supports a `connect` method to connect to a client and","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191156,"byte_end":8191235,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ a `disconnect` method to disconnect from that client. These two methods only","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191236,"byte_end":8191316,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ work once a named pipe is associated with an event loop.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191317,"byte_end":8191377,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191378,"byte_end":8191381,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The `connect` method will succeed asynchronously and a completion can be","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191382,"byte_end":8191458,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ detected once the object receives a writable notification.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191459,"byte_end":8191521,"line_start":72,"line_end":72,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191522,"byte_end":8191525,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Named pipe clients","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191526,"byte_end":8191550,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191551,"byte_end":8191554,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Currently to create a client of a named pipe server then you can use the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191555,"byte_end":8191631,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ `OpenOptions` type in the standard library to create a `File` that connects","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191632,"byte_end":8191711,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ to a named pipe. Afterwards you can use the `into_raw_handle` method coupled","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191712,"byte_end":8191792,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ with the `NamedPipe::from_raw_handle` method to convert that to a named pipe","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191793,"byte_end":8191873,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ that can operate asynchronously. Don't forget to pass the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191874,"byte_end":8191935,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/ `FILE_FLAG_OVERLAPPED` flag when opening the `File`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8191936,"byte_end":8191992,"line_start":81,"line_end":81,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8192990,"byte_end":8192993,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<NamedPipe>::new","value":"pub fn new<A: AsRef<OsStr>>(A) -> io::Result<NamedPipe>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new named pipe at the specified `addr` given a \"reasonable\n set\" of initial configuration options.\n","sig":null,"attributes":[{"value":"/ Creates a new named pipe at the specified `addr` given a \"reasonable","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8192859,"byte_end":8192931,"line_start":129,"line_end":129,"column_start":5,"column_end":77}},{"value":"/ set\" of initial configuration options.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8192936,"byte_end":8192978,"line_start":130,"line_end":130,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8194273,"byte_end":8194280,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"connect","qualname":"<NamedPipe>::connect","value":"pub fn connect(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to call `ConnectNamedPipe`, if possible.","sig":null,"attributes":[{"value":"/ Attempts to call `ConnectNamedPipe`, if possible.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193293,"byte_end":8193346,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193351,"byte_end":8193354,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to connect this pipe to a client in an","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193359,"byte_end":8193428,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ asynchronous fashion. If the function immediately establishes a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193433,"byte_end":8193500,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/ connection to a client then `Ok(())` is returned. Otherwise if a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193505,"byte_end":8193573,"line_start":144,"line_end":144,"column_start":5,"column_end":73}},{"value":"/ connection attempt was issued and is now in progress then a \"would","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193578,"byte_end":8193648,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ block\" error is returned.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193653,"byte_end":8193682,"line_start":146,"line_end":146,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193687,"byte_end":8193690,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ When the connection is finished then this object will be flagged as","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193695,"byte_end":8193766,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ being ready for a write, or otherwise in the writable state.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193771,"byte_end":8193835,"line_start":149,"line_end":149,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193840,"byte_end":8193843,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193848,"byte_end":8193860,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193865,"byte_end":8193868,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This function will return a \"would block\" error if the pipe has not yet","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193873,"byte_end":8193948,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ been registered with an event loop, if the connection operation has","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8193953,"byte_end":8194024,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ previously been issued but has not yet completed, or if the connect","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8194029,"byte_end":8194100,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ itself was issued and didn't finish immediately.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8194105,"byte_end":8194157,"line_start":156,"line_end":156,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8194162,"byte_end":8194165,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Normal I/O errors from the call to `ConnectNamedPipe` are returned","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8194170,"byte_end":8194240,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ immediately.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8194245,"byte_end":8194261,"line_start":159,"line_end":159,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196562,"byte_end":8196572,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"take_error","qualname":"<NamedPipe>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Takes any internal error that has happened after the last I/O operation\n which hasn't been retrieved yet.","sig":null,"attributes":[{"value":"/ Takes any internal error that has happened after the last I/O operation","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196012,"byte_end":8196087,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ which hasn't been retrieved yet.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196092,"byte_end":8196128,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196133,"byte_end":8196136,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This is particularly useful when detecting failed attempts to `connect`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196141,"byte_end":8196217,"line_start":206,"line_end":206,"column_start":5,"column_end":81}},{"value":"/ After a completed `connect` flags this pipe as writable then callers","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196222,"byte_end":8196294,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ must invoke this method to determine whether the connection actually","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196299,"byte_end":8196371,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ succeeded. If this function returns `None` then a client is connected,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196376,"byte_end":8196450,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ otherwise it returns an error of what happened and a client shouldn't be","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196455,"byte_end":8196531,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196536,"byte_end":8196550,"line_start":211,"line_end":211,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8197033,"byte_end":8197043,"line_start":223,"line_end":223,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<NamedPipe>::disconnect","value":"pub fn disconnect(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this named pipe from a connected client.","sig":null,"attributes":[{"value":"/ Disconnects this named pipe from a connected client.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196689,"byte_end":8196745,"line_start":216,"line_end":216,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196750,"byte_end":8196753,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This function will disconnect the pipe from a connected client, if any,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196758,"byte_end":8196833,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ transitively calling the `DisconnectNamedPipe` function.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196838,"byte_end":8196898,"line_start":219,"line_end":219,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196903,"byte_end":8196906,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ After a `disconnect` is issued, then a `connect` may be called again to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196911,"byte_end":8196986,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ connect to another client.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8196991,"byte_end":8197021,"line_start":222,"line_end":222,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49177,"byte_end":49182,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44226,"byte_end":44282,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44283,"byte_end":44286,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44287,"byte_end":44356,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44357,"byte_end":44413,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44414,"byte_end":44417,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44418,"byte_end":44469,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44470,"byte_end":44473,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44474,"byte_end":44522,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44523,"byte_end":44553,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44554,"byte_end":44618,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44619,"byte_end":44687,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44688,"byte_end":44691,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44692,"byte_end":44705,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44706,"byte_end":44709,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44710,"byte_end":44787,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44788,"byte_end":44857,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44858,"byte_end":44861,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44862,"byte_end":44905,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":44906,"byte_end":44909,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45059,"byte_end":45087,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45088,"byte_end":45135,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45136,"byte_end":45181,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45182,"byte_end":45212,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45213,"byte_end":45216,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45217,"byte_end":45237,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45238,"byte_end":45268,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45269,"byte_end":45303,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45304,"byte_end":45307,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45308,"byte_end":45382,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45383,"byte_end":45417,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45418,"byte_end":45421,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45422,"byte_end":45500,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45501,"byte_end":45525,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45526,"byte_end":45566,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45567,"byte_end":45570,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45571,"byte_end":45604,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45605,"byte_end":45642,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45643,"byte_end":45646,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45647,"byte_end":45706,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45707,"byte_end":45741,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45742,"byte_end":45745,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45746,"byte_end":45772,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45773,"byte_end":45805,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45806,"byte_end":45809,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45810,"byte_end":45829,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45830,"byte_end":45896,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45897,"byte_end":45900,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45901,"byte_end":45929,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":45930,"byte_end":46005,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46006,"byte_end":46009,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46010,"byte_end":46084,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46085,"byte_end":46123,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46124,"byte_end":46151,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46152,"byte_end":46184,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46185,"byte_end":46188,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46189,"byte_end":46267,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46268,"byte_end":46305,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46306,"byte_end":46349,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46350,"byte_end":46404,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46405,"byte_end":46414,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46415,"byte_end":46422,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46423,"byte_end":46426,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46427,"byte_end":46447,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46448,"byte_end":46497,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46498,"byte_end":46501,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46502,"byte_end":46557,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46558,"byte_end":46585,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46586,"byte_end":46589,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46590,"byte_end":46616,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46617,"byte_end":46627,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46628,"byte_end":46654,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46655,"byte_end":46693,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46694,"byte_end":46697,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46698,"byte_end":46728,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46729,"byte_end":46762,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46763,"byte_end":46792,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46793,"byte_end":46866,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46867,"byte_end":46902,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46903,"byte_end":46929,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46930,"byte_end":46979,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":46980,"byte_end":47032,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47033,"byte_end":47087,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47088,"byte_end":47157,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47158,"byte_end":47208,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47209,"byte_end":47242,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47243,"byte_end":47246,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47247,"byte_end":47310,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47311,"byte_end":47380,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47381,"byte_end":47436,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47437,"byte_end":47440,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47441,"byte_end":47507,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47508,"byte_end":47606,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47607,"byte_end":47610,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47611,"byte_end":47662,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47663,"byte_end":47725,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47726,"byte_end":47755,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47756,"byte_end":47840,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47841,"byte_end":47919,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47920,"byte_end":47958,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47959,"byte_end":47988,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":47989,"byte_end":48064,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48065,"byte_end":48090,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48091,"byte_end":48112,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48113,"byte_end":48130,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48131,"byte_end":48157,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48158,"byte_end":48205,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48206,"byte_end":48232,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48233,"byte_end":48312,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48313,"byte_end":48351,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48352,"byte_end":48427,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48428,"byte_end":48483,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48484,"byte_end":48522,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48523,"byte_end":48552,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48553,"byte_end":48625,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48626,"byte_end":48678,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48679,"byte_end":48763,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48764,"byte_end":48840,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48841,"byte_end":48879,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48880,"byte_end":48909,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48910,"byte_end":48985,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":48986,"byte_end":49011,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49012,"byte_end":49033,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49034,"byte_end":49051,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49052,"byte_end":49065,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49066,"byte_end":49075,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49076,"byte_end":49081,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49082,"byte_end":49089,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49090,"byte_end":49097,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\token.rs","byte_start":49183,"byte_end":49192,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51857,"byte_end":51862,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":883}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49339,"byte_end":49388,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49389,"byte_end":49392,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49393,"byte_end":49466,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49467,"byte_end":49540,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49541,"byte_end":49544,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49545,"byte_end":49575,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49576,"byte_end":49638,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49639,"byte_end":49682,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49683,"byte_end":49686,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49687,"byte_end":49698,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49699,"byte_end":49702,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49703,"byte_end":49781,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49782,"byte_end":49795,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49796,"byte_end":49799,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49800,"byte_end":49878,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49879,"byte_end":49952,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":49953,"byte_end":50024,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ undefined.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50025,"byte_end":50039,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50040,"byte_end":50043,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50044,"byte_end":50070,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50071,"byte_end":50074,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50075,"byte_end":50149,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50150,"byte_end":50228,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50229,"byte_end":50268,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50269,"byte_end":50272,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50273,"byte_end":50348,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: http://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50349,"byte_end":50415,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50416,"byte_end":50419,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50420,"byte_end":50434,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50435,"byte_end":50438,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50439,"byte_end":50488,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50489,"byte_end":50492,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50596,"byte_end":50655,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50656,"byte_end":50676,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50677,"byte_end":50705,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50706,"byte_end":50729,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50730,"byte_end":50733,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50734,"byte_end":50776,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50777,"byte_end":50780,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50781,"byte_end":50821,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50822,"byte_end":50825,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50826,"byte_end":50858,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50859,"byte_end":50905,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50906,"byte_end":50909,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50910,"byte_end":50977,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50978,"byte_end":50981,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":50982,"byte_end":51053,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51054,"byte_end":51084,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51085,"byte_end":51116,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51117,"byte_end":51157,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51158,"byte_end":51201,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51202,"byte_end":51252,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51253,"byte_end":51256,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51257,"byte_end":51313,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51314,"byte_end":51361,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51362,"byte_end":51369,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51370,"byte_end":51373,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51374,"byte_end":51444,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51445,"byte_end":51479,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51480,"byte_end":51483,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51484,"byte_end":51563,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51564,"byte_end":51590,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51591,"byte_end":51623,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51624,"byte_end":51676,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51677,"byte_end":51716,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51717,"byte_end":51765,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51766,"byte_end":51795,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51796,"byte_end":51812,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51813,"byte_end":51820,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51821,"byte_end":51828,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51945,"byte_end":51948,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51908,"byte_end":51933,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":52282,"byte_end":52286,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":52173,"byte_end":52227,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":52232,"byte_end":52235,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":52240,"byte_end":52270,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\mod.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":112},{"krate":0,"index":138},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\mod.rs","byte_start":52349,"byte_end":52389,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52949,"byte_end":52954,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":91}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52600,"byte_end":52622,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52623,"byte_end":52626,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52627,"byte_end":52702,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52703,"byte_end":52722,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52723,"byte_end":52726,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52727,"byte_end":52790,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52791,"byte_end":52794,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52795,"byte_end":52846,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52847,"byte_end":52880,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52881,"byte_end":52916,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52917,"byte_end":52937,"line_start":15,"line_end":15,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53042,"byte_end":53047,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53000,"byte_end":53030,"line_start":21,"line_end":21,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53186,"byte_end":53197,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53116,"byte_end":53174,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53341,"byte_end":53352,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53271,"byte_end":53329,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54354,"byte_end":54362,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53426,"byte_end":53481,"line_start":36,"line_end":36,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53486,"byte_end":53489,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53494,"byte_end":53569,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53574,"byte_end":53647,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53652,"byte_end":53702,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53707,"byte_end":53710,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53715,"byte_end":53726,"line_start":42,"line_end":42,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53731,"byte_end":53734,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53739,"byte_end":53814,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53819,"byte_end":53835,"line_start":45,"line_end":45,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53840,"byte_end":53843,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53848,"byte_end":53908,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53913,"byte_end":53916,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53921,"byte_end":53960,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":53965,"byte_end":54004,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54009,"byte_end":54048,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54053,"byte_end":54126,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54131,"byte_end":54134,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54139,"byte_end":54198,"line_start":54,"line_end":54,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54203,"byte_end":54265,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54270,"byte_end":54342,"line_start":56,"line_end":56,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55675,"byte_end":55689,"line_start":88,"line_end":88,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54433,"byte_end":54494,"line_start":61,"line_end":61,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54499,"byte_end":54502,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54507,"byte_end":54518,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54523,"byte_end":54526,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54531,"byte_end":54604,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54609,"byte_end":54622,"line_start":66,"line_end":66,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54627,"byte_end":54690,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shtudown both the read half and the write half","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54695,"byte_end":54768,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54773,"byte_end":54792,"line_start":69,"line_end":69,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shtudown the write half its socket; this sends a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54797,"byte_end":54871,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54876,"byte_end":54937,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54942,"byte_end":54945,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":54950,"byte_end":55022,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55027,"byte_end":55095,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55100,"byte_end":55135,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55140,"byte_end":55143,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55148,"byte_end":55208,"line_start":77,"line_end":77,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55213,"byte_end":55216,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55221,"byte_end":55260,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55265,"byte_end":55304,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55309,"byte_end":55348,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55353,"byte_end":55403,"line_start":82,"line_end":82,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55408,"byte_end":55447,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55452,"byte_end":55455,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55460,"byte_end":55519,"line_start":85,"line_end":85,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55524,"byte_end":55586,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55591,"byte_end":55663,"line_start":87,"line_end":87,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56920,"byte_end":56935,"line_start":118,"line_end":118,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55766,"byte_end":55828,"line_start":92,"line_end":92,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55833,"byte_end":55836,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55841,"byte_end":55852,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55857,"byte_end":55860,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55865,"byte_end":55934,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":55939,"byte_end":56013,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56018,"byte_end":56021,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56026,"byte_end":56094,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56099,"byte_end":56134,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56139,"byte_end":56142,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56147,"byte_end":56219,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56224,"byte_end":56293,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56298,"byte_end":56333,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56338,"byte_end":56341,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56346,"byte_end":56406,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56411,"byte_end":56414,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56419,"byte_end":56458,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56463,"byte_end":56502,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56507,"byte_end":56546,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56551,"byte_end":56594,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56599,"byte_end":56648,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56653,"byte_end":56692,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56697,"byte_end":56700,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56705,"byte_end":56764,"line_start":115,"line_end":115,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56769,"byte_end":56831,"line_start":116,"line_end":116,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":56836,"byte_end":56908,"line_start":117,"line_end":117,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57706,"byte_end":57717,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57013,"byte_end":57071,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57076,"byte_end":57079,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57084,"byte_end":57095,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57100,"byte_end":57103,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57108,"byte_end":57183,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57188,"byte_end":57207,"line_start":127,"line_end":127,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57212,"byte_end":57215,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57220,"byte_end":57280,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57285,"byte_end":57288,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57293,"byte_end":57332,"line_start":131,"line_end":131,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57337,"byte_end":57376,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57381,"byte_end":57420,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57425,"byte_end":57464,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57469,"byte_end":57472,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57477,"byte_end":57536,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57541,"byte_end":57603,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57608,"byte_end":57680,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57685,"byte_end":57694,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58522,"byte_end":58528,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57791,"byte_end":57844,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57849,"byte_end":57852,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57857,"byte_end":57868,"line_start":146,"line_end":146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57873,"byte_end":57876,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57881,"byte_end":57957,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57962,"byte_end":57965,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":57970,"byte_end":58030,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58035,"byte_end":58038,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58043,"byte_end":58082,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58087,"byte_end":58126,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58131,"byte_end":58170,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58175,"byte_end":58218,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58223,"byte_end":58226,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58231,"byte_end":58294,"line_start":157,"line_end":157,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58299,"byte_end":58302,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58307,"byte_end":58366,"line_start":159,"line_end":159,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58371,"byte_end":58433,"line_start":160,"line_end":160,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58438,"byte_end":58510,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58832,"byte_end":58838,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58597,"byte_end":58650,"line_start":166,"line_end":166,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58655,"byte_end":58658,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58663,"byte_end":58674,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58679,"byte_end":58682,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58687,"byte_end":58762,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":58767,"byte_end":58820,"line_start":171,"line_end":171,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61835,"byte_end":61841,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":60725,"byte_end":60762,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":60763,"byte_end":60766,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":60767,"byte_end":60842,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":60843,"byte_end":60920,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":60921,"byte_end":60995,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":60996,"byte_end":61038,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61039,"byte_end":61042,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61043,"byte_end":61094,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61095,"byte_end":61098,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61099,"byte_end":61150,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61151,"byte_end":61184,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61185,"byte_end":61188,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61189,"byte_end":61203,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61204,"byte_end":61207,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61311,"byte_end":61339,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61340,"byte_end":61387,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61388,"byte_end":61416,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61417,"byte_end":61445,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61446,"byte_end":61449,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61450,"byte_end":61499,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61500,"byte_end":61532,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61533,"byte_end":61538,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61539,"byte_end":61572,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61573,"byte_end":61576,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61577,"byte_end":61622,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61623,"byte_end":61626,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61627,"byte_end":61689,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61690,"byte_end":61693,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61694,"byte_end":61726,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61727,"byte_end":61784,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61785,"byte_end":61790,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61791,"byte_end":61807,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61808,"byte_end":61815,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61816,"byte_end":61823,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62674,"byte_end":62678,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61871,"byte_end":61895,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61896,"byte_end":61899,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61900,"byte_end":61964,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61965,"byte_end":61968,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":61969,"byte_end":62003,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62004,"byte_end":62048,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62049,"byte_end":62052,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62053,"byte_end":62067,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62068,"byte_end":62071,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62175,"byte_end":62203,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62204,"byte_end":62251,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62252,"byte_end":62280,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62281,"byte_end":62309,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62310,"byte_end":62313,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62314,"byte_end":62363,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62364,"byte_end":62396,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62397,"byte_end":62400,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62401,"byte_end":62437,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62438,"byte_end":62441,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62442,"byte_end":62504,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62505,"byte_end":62508,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62509,"byte_end":62541,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62542,"byte_end":62599,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62600,"byte_end":62605,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62606,"byte_end":62622,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62623,"byte_end":62630,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62631,"byte_end":62638,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63013,"byte_end":63026,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62745,"byte_end":62814,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62819,"byte_end":62822,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62827,"byte_end":62841,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62846,"byte_end":62849,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62854,"byte_end":62861,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62866,"byte_end":62886,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62891,"byte_end":62894,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62899,"byte_end":62944,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62949,"byte_end":62989,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62994,"byte_end":63001,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63385,"byte_end":63393,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63151,"byte_end":63213,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63218,"byte_end":63221,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63226,"byte_end":63233,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63238,"byte_end":63258,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63263,"byte_end":63266,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63271,"byte_end":63316,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63321,"byte_end":63361,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63366,"byte_end":63373,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63699,"byte_end":63707,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63453,"byte_end":63509,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63514,"byte_end":63517,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63522,"byte_end":63536,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63541,"byte_end":63544,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63549,"byte_end":63556,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63561,"byte_end":63581,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63586,"byte_end":63589,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63594,"byte_end":63639,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63644,"byte_end":63675,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63680,"byte_end":63687,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64508,"byte_end":64512,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63766,"byte_end":63814,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63819,"byte_end":63822,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63827,"byte_end":63841,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63846,"byte_end":63849,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63965,"byte_end":63993,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":63998,"byte_end":64045,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64050,"byte_end":64078,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64083,"byte_end":64111,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64116,"byte_end":64119,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64124,"byte_end":64173,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64178,"byte_end":64210,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64215,"byte_end":64218,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64223,"byte_end":64259,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64264,"byte_end":64267,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64272,"byte_end":64334,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64339,"byte_end":64342,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64347,"byte_end":64379,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64384,"byte_end":64441,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64446,"byte_end":64451,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64456,"byte_end":64472,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64477,"byte_end":64484,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64489,"byte_end":64496,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65480,"byte_end":65485,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64615,"byte_end":64673,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64678,"byte_end":64681,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64686,"byte_end":64697,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64702,"byte_end":64705,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64710,"byte_end":64783,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64788,"byte_end":64806,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64811,"byte_end":64814,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64819,"byte_end":64833,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64838,"byte_end":64841,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64957,"byte_end":64985,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":64990,"byte_end":65037,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65042,"byte_end":65070,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65075,"byte_end":65103,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65108,"byte_end":65111,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65116,"byte_end":65165,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65170,"byte_end":65202,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65207,"byte_end":65210,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65215,"byte_end":65251,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65256,"byte_end":65259,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65264,"byte_end":65326,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65331,"byte_end":65334,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65339,"byte_end":65363,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65368,"byte_end":65387,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65392,"byte_end":65423,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65428,"byte_end":65444,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65449,"byte_end":65456,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65461,"byte_end":65468,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69065,"byte_end":69071,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66516,"byte_end":66577,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66578,"byte_end":66581,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66582,"byte_end":66645,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66646,"byte_end":66719,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66720,"byte_end":66798,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66799,"byte_end":66811,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66812,"byte_end":66815,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66816,"byte_end":66854,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66855,"byte_end":66858,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66859,"byte_end":66900,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66901,"byte_end":66904,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66905,"byte_end":66939,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66940,"byte_end":66943,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":66944,"byte_end":67023,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67024,"byte_end":67098,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67099,"byte_end":67176,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67177,"byte_end":67256,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67257,"byte_end":67274,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67275,"byte_end":67278,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67279,"byte_end":67326,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67327,"byte_end":67373,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67374,"byte_end":67377,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67378,"byte_end":67409,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67410,"byte_end":67413,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67414,"byte_end":67493,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67494,"byte_end":67572,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67573,"byte_end":67652,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67653,"byte_end":67728,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67729,"byte_end":67786,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67787,"byte_end":67790,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67791,"byte_end":67852,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67853,"byte_end":67856,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67857,"byte_end":67871,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67872,"byte_end":67875,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67876,"byte_end":67934,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":67935,"byte_end":67938,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68088,"byte_end":68129,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68130,"byte_end":68157,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68158,"byte_end":68186,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68187,"byte_end":68190,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68191,"byte_end":68207,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68208,"byte_end":68211,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68212,"byte_end":68237,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68238,"byte_end":68263,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68264,"byte_end":68290,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68291,"byte_end":68296,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68297,"byte_end":68300,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68301,"byte_end":68331,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68332,"byte_end":68418,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68419,"byte_end":68448,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68449,"byte_end":68458,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68459,"byte_end":68514,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68515,"byte_end":68575,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68576,"byte_end":68585,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68586,"byte_end":68589,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68590,"byte_end":68678,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68679,"byte_end":68708,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68709,"byte_end":68718,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68719,"byte_end":68776,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68777,"byte_end":68839,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68840,"byte_end":68849,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68850,"byte_end":68853,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68854,"byte_end":68927,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68928,"byte_end":68985,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":68986,"byte_end":69030,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69031,"byte_end":69040,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69041,"byte_end":69046,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69047,"byte_end":69054,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69423,"byte_end":69431,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69078,"byte_end":69133,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69138,"byte_end":69141,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69146,"byte_end":69221,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69226,"byte_end":69301,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69306,"byte_end":69335,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69340,"byte_end":69343,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69348,"byte_end":69415,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69926,"byte_end":69936,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69562,"byte_end":69620,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69625,"byte_end":69628,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69633,"byte_end":69685,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69690,"byte_end":69754,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69759,"byte_end":69834,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69839,"byte_end":69842,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":69847,"byte_end":69918,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70422,"byte_end":70432,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70067,"byte_end":70124,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70129,"byte_end":70132,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70137,"byte_end":70189,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70194,"byte_end":70258,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70263,"byte_end":70330,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70335,"byte_end":70338,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70343,"byte_end":70414,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1200}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\macros.rs","byte_start":10431,"byte_end":10454,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8220918,"byte_end":8220944,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8220945,"byte_end":8220948,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8220949,"byte_end":8221022,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221023,"byte_end":8221101,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221102,"byte_end":8221180,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221181,"byte_end":8221212,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221213,"byte_end":8221216,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\mod.rs","byte_start":8221217,"byte_end":8221278,"line_start":8,"line_end":8,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222817,"byte_end":8222828,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":978}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222018,"byte_end":8222062,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222063,"byte_end":8222066,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222067,"byte_end":8222081,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222082,"byte_end":8222085,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222189,"byte_end":8222217,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222218,"byte_end":8222265,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222266,"byte_end":8222311,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222312,"byte_end":8222342,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222343,"byte_end":8222371,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222372,"byte_end":8222375,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222376,"byte_end":8222446,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222447,"byte_end":8222450,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222451,"byte_end":8222483,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222484,"byte_end":8222532,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222533,"byte_end":8222536,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222537,"byte_end":8222575,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222576,"byte_end":8222651,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222652,"byte_end":8222655,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222656,"byte_end":8222718,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222719,"byte_end":8222722,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222723,"byte_end":8222772,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222773,"byte_end":8222789,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222790,"byte_end":8222797,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222798,"byte_end":8222805,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8223322,"byte_end":8223326,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222896,"byte_end":8222970,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222975,"byte_end":8223006,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8223011,"byte_end":8223014,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8223019,"byte_end":8223067,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8223072,"byte_end":8223075,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8223080,"byte_end":8223111,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8223116,"byte_end":8223175,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8223180,"byte_end":8223228,"line_start":50,"line_end":50,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8223233,"byte_end":8223310,"line_start":51,"line_end":51,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224378,"byte_end":8224386,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224028,"byte_end":8224095,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224100,"byte_end":8224103,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224108,"byte_end":8224180,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224185,"byte_end":8224259,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224264,"byte_end":8224336,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224341,"byte_end":8224366,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224901,"byte_end":8224907,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224519,"byte_end":8224549,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224554,"byte_end":8224557,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224562,"byte_end":8224613,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224618,"byte_end":8224694,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224699,"byte_end":8224772,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224777,"byte_end":8224780,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224785,"byte_end":8224857,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8224862,"byte_end":8224889,"line_start":88,"line_end":88,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225173,"byte_end":8225183,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225107,"byte_end":8225161,"line_start":95,"line_end":95,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225447,"byte_end":8225454,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225262,"byte_end":8225320,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225325,"byte_end":8225328,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225333,"byte_end":8225409,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225414,"byte_end":8225435,"line_start":103,"line_end":103,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225724,"byte_end":8225727,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225535,"byte_end":8225593,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225598,"byte_end":8225601,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225606,"byte_end":8225672,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225677,"byte_end":8225680,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225685,"byte_end":8225712,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8226045,"byte_end":8226055,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225792,"byte_end":8225850,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225855,"byte_end":8225858,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225863,"byte_end":8225937,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8225942,"byte_end":8226018,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8226023,"byte_end":8226033,"line_start":121,"line_end":121,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228781,"byte_end":8228790,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":1202}],"decl_id":null,"docs":" A non-blocking TCP socket used to configure a stream or listener.","sig":null,"attributes":[{"value":"/ A non-blocking TCP socket used to configure a stream or listener.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228422,"byte_end":8228491,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228492,"byte_end":8228495,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `TcpSocket` type wraps the operating-system's socket handle. This type","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228496,"byte_end":8228574,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ is used to configure the socket before establishing a connection or start","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228575,"byte_end":8228652,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ listening for inbound connections.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228653,"byte_end":8228691,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228692,"byte_end":8228695,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228696,"byte_end":8228752,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228922,"byte_end":8228934,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"TcpKeepalive","qualname":"::net::tcp::socket::TcpKeepalive","value":"TcpKeepalive {  }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"decl_id":null,"docs":" Configures a socket's TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Configures a socket's TCP keepalive parameters.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8228826,"byte_end":8228877,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229534,"byte_end":8229540,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv4 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv4 TCP socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229449,"byte_end":8229482,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229487,"byte_end":8229490,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229495,"byte_end":8229522,"line_start":51,"line_end":51,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229729,"byte_end":8229735,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv6 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv6 TCP socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229644,"byte_end":8229677,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229682,"byte_end":8229685,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229690,"byte_end":8229717,"line_start":58,"line_end":58,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230087,"byte_end":8230091,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind `addr` to the TCP socket.\n","sig":null,"attributes":[{"value":"/ Bind `addr` to the TCP socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230041,"byte_end":8230075,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230426,"byte_end":8230433,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub fn connect(Self, SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Connect the socket to `addr`.","sig":null,"attributes":[{"value":"/ Connect the socket to `addr`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230187,"byte_end":8230220,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230225,"byte_end":8230228,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This consumes the socket and performs the connect operation. Once the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230233,"byte_end":8230306,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ connection completes, the socket is now a non-blocking `TcpStream` and","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230311,"byte_end":8230385,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ can be used as such.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230390,"byte_end":8230414,"line_start":80,"line_end":80,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230752,"byte_end":8230758,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Listen for inbound connections, converting the socket to a\n `TcpListener`.\n","sig":null,"attributes":[{"value":"/ Listen for inbound connections, converting the socket to a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230655,"byte_end":8230717,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/ `TcpListener`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230722,"byte_end":8230740,"line_start":90,"line_end":90,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8231050,"byte_end":8231063,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_REUSEADDR` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_REUSEADDR` on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8230986,"byte_end":8231038,"line_start":99,"line_end":99,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8231239,"byte_end":8231252,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"get_reuseaddr","qualname":"<TcpSocket>::get_reuseaddr","value":"pub fn get_reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_REUSEADDR` set on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of `SO_REUSEADDR` set on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8231172,"byte_end":8231227,"line_start":104,"line_end":104,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8231983,"byte_end":8231993,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpSocket>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_LINGER` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_LINGER` on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8231922,"byte_end":8231971,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232159,"byte_end":8232169,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"get_linger","qualname":"<TcpSocket>::get_linger","value":"pub fn get_linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of `SO_LINGER` on this socket\n","sig":null,"attributes":[{"value":"/ Gets the value of `SO_LINGER` on this socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232099,"byte_end":8232147,"line_start":128,"line_end":128,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232322,"byte_end":8232342,"line_start":134,"line_end":134,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_RCVBUF` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_RCVBUF` on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232261,"byte_end":8232310,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233569,"byte_end":8233589,"line_start":158,"line_end":158,"column_start":12,"column_end":32},"name":"get_recv_buffer_size","qualname":"<TcpSocket>::get_recv_buffer_size","value":"pub fn get_recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_RCVBUF` set on this socket.","sig":null,"attributes":[{"value":"/ Get the value of `SO_RCVBUF` set on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232447,"byte_end":8232499,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232504,"byte_end":8232507,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232512,"byte_end":8232584,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232589,"byte_end":8232663,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_recv_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232668,"byte_end":8232736,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232741,"byte_end":8232763,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232768,"byte_end":8232771,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232776,"byte_end":8232851,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232856,"byte_end":8232930,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8232935,"byte_end":8233011,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233016,"byte_end":8233035,"line_start":148,"line_end":148,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233040,"byte_end":8233115,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233120,"byte_end":8233195,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233200,"byte_end":8233216,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket receive buffer in bytes. The","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233221,"byte_end":8233289,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233294,"byte_end":8233359,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233364,"byte_end":8233436,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233441,"byte_end":8233486,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233491,"byte_end":8233494,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233499,"byte_end":8233557,"line_start":157,"line_end":157,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233739,"byte_end":8233759,"line_start":163,"line_end":163,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_SNDBUF` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_SNDBUF` on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233678,"byte_end":8233727,"line_start":162,"line_end":162,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234983,"byte_end":8235003,"line_start":187,"line_end":187,"column_start":12,"column_end":32},"name":"get_send_buffer_size","qualname":"<TcpSocket>::get_send_buffer_size","value":"pub fn get_send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_SNDBUF` set on this socket.","sig":null,"attributes":[{"value":"/ Get the value of `SO_SNDBUF` set on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233864,"byte_end":8233916,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233921,"byte_end":8233924,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8233929,"byte_end":8234001,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234006,"byte_end":8234080,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234085,"byte_end":8234153,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234158,"byte_end":8234180,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234185,"byte_end":8234188,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234193,"byte_end":8234268,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234273,"byte_end":8234347,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234352,"byte_end":8234428,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234433,"byte_end":8234452,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234457,"byte_end":8234532,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234537,"byte_end":8234612,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234617,"byte_end":8234633,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234638,"byte_end":8234703,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234708,"byte_end":8234773,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234778,"byte_end":8234850,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234855,"byte_end":8234900,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234905,"byte_end":8234908,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8234913,"byte_end":8234971,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235250,"byte_end":8235263,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpSocket>::set_keepalive","value":"pub fn set_keepalive(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235092,"byte_end":8235166,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235171,"byte_end":8235174,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This will set the `SO_KEEPALIVE` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235179,"byte_end":8235238,"line_start":193,"line_end":193,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235460,"byte_end":8235473,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"get_keepalive","qualname":"<TcpSocket>::get_keepalive","value":"pub fn get_keepalive(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not TCP keepalive probes will be sent by this socket.\n","sig":null,"attributes":[{"value":"/ Returns whether or not TCP keepalive probes will be sent by this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235372,"byte_end":8235448,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8237170,"byte_end":8237190,"line_start":239,"line_end":239,"column_start":12,"column_end":32},"name":"set_keepalive_params","qualname":"<TcpSocket>::set_keepalive_params","value":"pub fn set_keepalive_params(&Self, TcpKeepalive) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets parameters configuring TCP keepalive probes for this socket.","sig":null,"attributes":[{"value":"/ Sets parameters configuring TCP keepalive probes for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235556,"byte_end":8235625,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235630,"byte_end":8235633,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The supported parameters depend on the operating system, and are","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235638,"byte_end":8235706,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ configured using the [`TcpKeepalive`] struct. At a minimum, all systems","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235711,"byte_end":8235786,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ support configuring the [keepalive time]: the time after which the OS","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235791,"byte_end":8235864,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ will start sending keepalive messages on an idle connection.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235869,"byte_end":8235933,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235938,"byte_end":8235941,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235946,"byte_end":8235957,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235962,"byte_end":8235965,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ * This will enable TCP keepalive on this socket, if it is not already","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8235970,"byte_end":8236043,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/   enabled.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236048,"byte_end":8236062,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/ * On some platforms, such as Windows, any keepalive parameters *not*","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236067,"byte_end":8236139,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/   configured by the `TcpKeepalive` struct passed to this function may be","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236144,"byte_end":8236220,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/   overwritten with their default values. Therefore, this function should","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236225,"byte_end":8236301,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/   either only be called once per socket, or the same parameters should","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236306,"byte_end":8236380,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/   be passed every time it is called.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236385,"byte_end":8236425,"line_start":218,"line_end":218,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236430,"byte_end":8236433,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236438,"byte_end":8236452,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236457,"byte_end":8236464,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ use mio::net::{TcpSocket, TcpKeepalive};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236469,"byte_end":8236513,"line_start":222,"line_end":222,"column_start":5,"column_end":49}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236518,"byte_end":8236546,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236551,"byte_end":8236554,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236559,"byte_end":8236606,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/ let socket = TcpSocket::new_v6()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236611,"byte_end":8236649,"line_start":226,"line_end":226,"column_start":5,"column_end":43}},{"value":"/ let keepalive = TcpKeepalive::default()","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236654,"byte_end":8236697,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/     .with_time(Duration::from_secs(4));","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236702,"byte_end":8236745,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     // Depending on the target operating system, we may also be able to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236750,"byte_end":8236825,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/     // configure the keepalive probe interval and/or the number of retries","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236830,"byte_end":8236908,"line_start":230,"line_end":230,"column_start":5,"column_end":83}},{"value":"/     // here as well.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236913,"byte_end":8236937,"line_start":231,"line_end":231,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236942,"byte_end":8236945,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ socket.set_keepalive_params(keepalive)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236950,"byte_end":8236994,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8236999,"byte_end":8237013,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8237018,"byte_end":8237025,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8237030,"byte_end":8237033,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`TcpKeepalive`]: ../struct.TcpKeepalive.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8237038,"byte_end":8237087,"line_start":237,"line_end":237,"column_start":5,"column_end":54}},{"value":"/ [keepalive time]: ../struct.TcpKeepalive.html#method.with_time","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8237092,"byte_end":8237158,"line_start":238,"line_end":238,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8240367,"byte_end":8240380,"line_start":326,"line_end":326,"column_start":12,"column_end":25},"name":"get_localaddr","qualname":"<TcpSocket>::get_localaddr","value":"pub fn get_localaddr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of this socket","sig":null,"attributes":[{"value":"/ Returns the local address of this socket","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8240227,"byte_end":8240271,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8240276,"byte_end":8240279,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` result in windows if called before calling `bind`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8240284,"byte_end":8240355,"line_start":325,"line_end":325,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242717,"byte_end":8242726,"line_start":416,"line_end":416,"column_start":12,"column_end":21},"name":"with_time","qualname":"<TcpKeepalive>::with_time","value":"pub fn with_time(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" on idle connections.","sig":null,"attributes":[{"value":"/ on idle connections.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242260,"byte_end":8242284,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242289,"byte_end":8242292,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This will set the value of `SO_KEEPALIVE` + `IPPROTO_TCP` on OpenBSD,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242297,"byte_end":8242370,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ NetBSD, and Haiku, `TCP_KEEPALIVE` on macOS and iOS, and `TCP_KEEPIDLE`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242375,"byte_end":8242450,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ on all other Unix operating systems. On Windows, this sets the value of","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242455,"byte_end":8242530,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ the `tcp_keepalive` struct's `keepalivetime` field.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242535,"byte_end":8242590,"line_start":412,"line_end":412,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242595,"byte_end":8242598,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242603,"byte_end":8242666,"line_start":414,"line_end":414,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242671,"byte_end":8242705,"line_start":415,"line_end":415,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8243689,"byte_end":8243702,"line_start":449,"line_end":449,"column_start":12,"column_end":25},"name":"with_interval","qualname":"<TcpKeepalive>::with_interval","value":"pub fn with_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the time interval between TCP keepalive probes.\n This sets the value of `TCP_KEEPINTVL` on supported Unix operating\n systems. On Windows, this sets the value of the `tcp_keepalive` struct's\n `keepaliveinterval` field.","sig":null,"attributes":[{"value":"/ Sets the time interval between TCP keepalive probes.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242844,"byte_end":8242900,"line_start":423,"line_end":423,"column_start":5,"column_end":61}},{"value":"/ This sets the value of `TCP_KEEPINTVL` on supported Unix operating","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242905,"byte_end":8242975,"line_start":424,"line_end":424,"column_start":5,"column_end":75}},{"value":"/ systems. On Windows, this sets the value of the `tcp_keepalive` struct's","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242980,"byte_end":8243056,"line_start":425,"line_end":425,"column_start":5,"column_end":81}},{"value":"/ `keepaliveinterval` field.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8243061,"byte_end":8243091,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8243096,"byte_end":8243099,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8243104,"byte_end":8243167,"line_start":428,"line_end":428,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8243172,"byte_end":8243206,"line_start":429,"line_end":429,"column_start":5,"column_end":39}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\", target_os =\n          \"windows\"))","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8243483,"byte_end":8243677,"line_start":441,"line_end":448,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8244722,"byte_end":8244725,"line_start":486,"line_end":486,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpKeepalive>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new, empty set of TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new, empty set of TCP keepalive parameters.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8244653,"byte_end":8244710,"line_start":485,"line_end":485,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246198,"byte_end":8246207,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1077}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245166,"byte_end":8245239,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245240,"byte_end":8245243,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245244,"byte_end":8245300,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245301,"byte_end":8245304,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245305,"byte_end":8245319,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245320,"byte_end":8245323,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245427,"byte_end":8245473,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245474,"byte_end":8245502,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245503,"byte_end":8245508,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245509,"byte_end":8245556,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245557,"byte_end":8245610,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245611,"byte_end":8245658,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245659,"byte_end":8245704,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245705,"byte_end":8245733,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245734,"byte_end":8245762,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245763,"byte_end":8245766,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245767,"byte_end":8245832,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245833,"byte_end":8245836,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245837,"byte_end":8245869,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245870,"byte_end":8245918,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245919,"byte_end":8245922,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245923,"byte_end":8245961,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8245962,"byte_end":8246035,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246036,"byte_end":8246039,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246040,"byte_end":8246102,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246103,"byte_end":8246106,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246107,"byte_end":8246153,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246154,"byte_end":8246170,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246171,"byte_end":8246178,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246179,"byte_end":8246186,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246377,"byte_end":8246384,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.\n","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246271,"byte_end":8246338,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246343,"byte_end":8246365,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247074,"byte_end":8247082,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246523,"byte_end":8246586,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246591,"byte_end":8246594,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246599,"byte_end":8246669,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246674,"byte_end":8246748,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246753,"byte_end":8246824,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246829,"byte_end":8246851,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246856,"byte_end":8246859,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246864,"byte_end":8246874,"line_start":64,"line_end":64,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246879,"byte_end":8246882,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246887,"byte_end":8246954,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246959,"byte_end":8247031,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247036,"byte_end":8247062,"line_start":68,"line_end":68,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247290,"byte_end":8247299,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247205,"byte_end":8247278,"line_start":75,"line_end":75,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247461,"byte_end":8247471,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247377,"byte_end":8247449,"line_start":80,"line_end":80,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247825,"byte_end":8247833,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247550,"byte_end":8247616,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247621,"byte_end":8247624,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247629,"byte_end":8247701,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247706,"byte_end":8247775,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247780,"byte_end":8247813,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248575,"byte_end":8248586,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247920,"byte_end":8247982,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247987,"byte_end":8247990,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8247995,"byte_end":8248064,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248069,"byte_end":8248142,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248147,"byte_end":8248220,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248225,"byte_end":8248300,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248305,"byte_end":8248323,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248328,"byte_end":8248331,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248336,"byte_end":8248347,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248352,"byte_end":8248355,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248360,"byte_end":8248436,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248441,"byte_end":8248508,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248513,"byte_end":8248563,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249121,"byte_end":8249128,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248680,"byte_end":8248742,"line_start":111,"line_end":111,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248747,"byte_end":8248750,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248755,"byte_end":8248825,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248830,"byte_end":8248833,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248838,"byte_end":8248869,"line_start":115,"line_end":115,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248874,"byte_end":8248877,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248882,"byte_end":8248893,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248898,"byte_end":8248901,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248906,"byte_end":8248982,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8248987,"byte_end":8249054,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249059,"byte_end":8249109,"line_start":121,"line_end":121,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249619,"byte_end":8249626,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249198,"byte_end":8249256,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249261,"byte_end":8249264,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249269,"byte_end":8249345,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249350,"byte_end":8249371,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249376,"byte_end":8249379,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249384,"byte_end":8249395,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249400,"byte_end":8249403,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249408,"byte_end":8249484,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249489,"byte_end":8249552,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249557,"byte_end":8249607,"line_start":135,"line_end":135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250132,"byte_end":8250135,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249707,"byte_end":8249765,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249770,"byte_end":8249773,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249778,"byte_end":8249844,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249849,"byte_end":8249852,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249857,"byte_end":8249868,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249873,"byte_end":8249876,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249881,"byte_end":8249957,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8249962,"byte_end":8250025,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250030,"byte_end":8250080,"line_start":148,"line_end":148,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250085,"byte_end":8250088,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250093,"byte_end":8250120,"line_start":150,"line_end":150,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250453,"byte_end":8250463,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250200,"byte_end":8250258,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250263,"byte_end":8250266,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250271,"byte_end":8250345,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250350,"byte_end":8250426,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250431,"byte_end":8250441,"line_start":159,"line_end":159,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250901,"byte_end":8250905,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250549,"byte_end":8250619,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250624,"byte_end":8250693,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250698,"byte_end":8250737,"line_start":166,"line_end":166,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250742,"byte_end":8250745,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250750,"byte_end":8250824,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8250829,"byte_end":8250889,"line_start":169,"line_end":169,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257726,"byte_end":8257735,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1155}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255088,"byte_end":8255124,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255125,"byte_end":8255128,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255129,"byte_end":8255209,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255210,"byte_end":8255290,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255291,"byte_end":8255318,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255319,"byte_end":8255322,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255323,"byte_end":8255337,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255338,"byte_end":8255341,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255445,"byte_end":8255473,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255474,"byte_end":8255479,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255480,"byte_end":8255527,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255528,"byte_end":8255551,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255552,"byte_end":8255585,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255586,"byte_end":8255643,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255644,"byte_end":8255647,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255648,"byte_end":8255676,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255677,"byte_end":8255722,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255723,"byte_end":8255751,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255752,"byte_end":8255755,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255756,"byte_end":8255791,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255792,"byte_end":8255827,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255828,"byte_end":8255831,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255832,"byte_end":8255927,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255928,"byte_end":8255942,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8255943,"byte_end":8256012,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256013,"byte_end":8256082,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256083,"byte_end":8256086,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256087,"byte_end":8256183,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256184,"byte_end":8256204,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256205,"byte_end":8256261,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256262,"byte_end":8256265,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256266,"byte_end":8256364,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256365,"byte_end":8256382,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256383,"byte_end":8256415,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256416,"byte_end":8256419,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256420,"byte_end":8256514,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256515,"byte_end":8256593,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256594,"byte_end":8256672,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256673,"byte_end":8256676,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256677,"byte_end":8256706,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256707,"byte_end":8256735,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256736,"byte_end":8256739,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256740,"byte_end":8256788,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256789,"byte_end":8256799,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256800,"byte_end":8256866,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256867,"byte_end":8256903,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256904,"byte_end":8256937,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256938,"byte_end":8256996,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8256997,"byte_end":8257024,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257025,"byte_end":8257096,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257097,"byte_end":8257143,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257144,"byte_end":8257225,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257226,"byte_end":8257244,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257245,"byte_end":8257300,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257301,"byte_end":8257328,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257329,"byte_end":8257397,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257398,"byte_end":8257466,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257467,"byte_end":8257503,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257504,"byte_end":8257577,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257578,"byte_end":8257614,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257615,"byte_end":8257632,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257633,"byte_end":8257668,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257669,"byte_end":8257682,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257683,"byte_end":8257692,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257693,"byte_end":8257698,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257699,"byte_end":8257706,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257707,"byte_end":8257714,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258709,"byte_end":8258713,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257799,"byte_end":8257847,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257852,"byte_end":8257855,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257860,"byte_end":8257874,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257879,"byte_end":8257882,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257998,"byte_end":8258026,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258031,"byte_end":8258036,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258041,"byte_end":8258088,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258093,"byte_end":8258121,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258126,"byte_end":8258129,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258134,"byte_end":8258176,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258181,"byte_end":8258245,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258250,"byte_end":8258287,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258292,"byte_end":8258314,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258319,"byte_end":8258404,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258409,"byte_end":8258465,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258470,"byte_end":8258479,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258484,"byte_end":8258490,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258495,"byte_end":8258498,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258503,"byte_end":8258590,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258595,"byte_end":8258653,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258658,"byte_end":8258673,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258678,"byte_end":8258685,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258690,"byte_end":8258697,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259164,"byte_end":8259172,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258824,"byte_end":8258887,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258892,"byte_end":8258895,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258900,"byte_end":8258970,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8258975,"byte_end":8259049,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259054,"byte_end":8259125,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259130,"byte_end":8259152,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260126,"byte_end":8260136,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259295,"byte_end":8259360,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259365,"byte_end":8259368,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259373,"byte_end":8259387,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259392,"byte_end":8259395,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259793,"byte_end":8259821,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259826,"byte_end":8259831,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259836,"byte_end":8259883,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259888,"byte_end":8259916,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259921,"byte_end":8259924,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259929,"byte_end":8259967,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8259972,"byte_end":8260012,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260017,"byte_end":8260070,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260075,"byte_end":8260090,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260095,"byte_end":8260102,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260107,"byte_end":8260114,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261018,"byte_end":8261025,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260215,"byte_end":8260289,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260294,"byte_end":8260322,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260327,"byte_end":8260330,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260335,"byte_end":8260408,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260413,"byte_end":8260453,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260458,"byte_end":8260461,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260466,"byte_end":8260480,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260485,"byte_end":8260488,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260493,"byte_end":8260506,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260511,"byte_end":8260539,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260544,"byte_end":8260591,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260596,"byte_end":8260624,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260629,"byte_end":8260632,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260637,"byte_end":8260695,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260700,"byte_end":8260703,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260708,"byte_end":8260778,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260783,"byte_end":8260830,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260835,"byte_end":8260838,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260843,"byte_end":8260917,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260922,"byte_end":8260952,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260957,"byte_end":8260962,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260967,"byte_end":8260982,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260987,"byte_end":8260994,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8260999,"byte_end":8261006,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262326,"byte_end":8262335,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261160,"byte_end":8261234,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261239,"byte_end":8261290,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261295,"byte_end":8261298,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261303,"byte_end":8261314,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261319,"byte_end":8261322,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261327,"byte_end":8261402,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261407,"byte_end":8261485,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261490,"byte_end":8261538,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261543,"byte_end":8261610,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261615,"byte_end":8261683,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261688,"byte_end":8261691,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261696,"byte_end":8261710,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261715,"byte_end":8261718,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261723,"byte_end":8261736,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261741,"byte_end":8261769,"line_start":206,"line_end":206,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261774,"byte_end":8261779,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261784,"byte_end":8261831,"line_start":208,"line_end":208,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261836,"byte_end":8261864,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261869,"byte_end":8261872,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261877,"byte_end":8261935,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261940,"byte_end":8261943,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8261948,"byte_end":8262020,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262025,"byte_end":8262072,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262077,"byte_end":8262080,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262085,"byte_end":8262110,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262115,"byte_end":8262175,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262180,"byte_end":8262260,"line_start":218,"line_end":218,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262265,"byte_end":8262270,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262275,"byte_end":8262290,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262295,"byte_end":8262302,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262307,"byte_end":8262314,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263678,"byte_end":8263687,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262462,"byte_end":8262538,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262543,"byte_end":8262619,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262624,"byte_end":8262642,"line_start":229,"line_end":229,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262647,"byte_end":8262650,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262655,"byte_end":8262666,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262671,"byte_end":8262674,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262679,"byte_end":8262754,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262759,"byte_end":8262837,"line_start":234,"line_end":234,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262842,"byte_end":8262890,"line_start":235,"line_end":235,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262895,"byte_end":8262962,"line_start":236,"line_end":236,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8262967,"byte_end":8263035,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263040,"byte_end":8263043,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263048,"byte_end":8263062,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263067,"byte_end":8263070,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263075,"byte_end":8263088,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263093,"byte_end":8263121,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263126,"byte_end":8263131,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263136,"byte_end":8263183,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263188,"byte_end":8263216,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263221,"byte_end":8263224,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263229,"byte_end":8263287,"line_start":247,"line_end":247,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263292,"byte_end":8263295,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263300,"byte_end":8263372,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263377,"byte_end":8263424,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263429,"byte_end":8263432,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263437,"byte_end":8263462,"line_start":252,"line_end":252,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263467,"byte_end":8263527,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263532,"byte_end":8263612,"line_start":254,"line_end":254,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263617,"byte_end":8263622,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263627,"byte_end":8263642,"line_start":256,"line_end":256,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263647,"byte_end":8263654,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263659,"byte_end":8263666,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263958,"byte_end":8263962,"line_start":265,"line_end":265,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263814,"byte_end":8263901,"line_start":263,"line_end":263,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8263906,"byte_end":8263946,"line_start":264,"line_end":264,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264586,"byte_end":8264590,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264066,"byte_end":8264152,"line_start":269,"line_end":269,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264157,"byte_end":8264186,"line_start":270,"line_end":270,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264191,"byte_end":8264194,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264199,"byte_end":8264210,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264215,"byte_end":8264218,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264223,"byte_end":8264298,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264303,"byte_end":8264376,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264381,"byte_end":8264429,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264434,"byte_end":8264501,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264506,"byte_end":8264574,"line_start":278,"line_end":278,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265228,"byte_end":8265232,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264698,"byte_end":8264774,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264779,"byte_end":8264828,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264833,"byte_end":8264836,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264841,"byte_end":8264852,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264857,"byte_end":8264860,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264865,"byte_end":8264940,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8264945,"byte_end":8265018,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265023,"byte_end":8265071,"line_start":290,"line_end":290,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265076,"byte_end":8265143,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265148,"byte_end":8265216,"line_start":292,"line_end":292,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265524,"byte_end":8265531,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265340,"byte_end":8265412,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265417,"byte_end":8265493,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265498,"byte_end":8265512,"line_start":299,"line_end":299,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266385,"byte_end":8266398,"line_start":328,"line_end":328,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265621,"byte_end":8265685,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265690,"byte_end":8265693,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265698,"byte_end":8265769,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265774,"byte_end":8265786,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265791,"byte_end":8265794,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265799,"byte_end":8265813,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265818,"byte_end":8265821,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265937,"byte_end":8265965,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265970,"byte_end":8265975,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8265980,"byte_end":8266027,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266032,"byte_end":8266060,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266065,"byte_end":8266068,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266073,"byte_end":8266141,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266146,"byte_end":8266193,"line_start":319,"line_end":319,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266198,"byte_end":8266244,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266249,"byte_end":8266254,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266259,"byte_end":8266262,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266267,"byte_end":8266319,"line_start":323,"line_end":323,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266324,"byte_end":8266329,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266334,"byte_end":8266349,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266354,"byte_end":8266361,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266366,"byte_end":8266373,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267166,"byte_end":8267175,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266484,"byte_end":8266548,"line_start":332,"line_end":332,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266553,"byte_end":8266556,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266561,"byte_end":8266608,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266613,"byte_end":8266641,"line_start":335,"line_end":335,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266646,"byte_end":8266649,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266654,"byte_end":8266687,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266692,"byte_end":8266695,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266700,"byte_end":8266714,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266719,"byte_end":8266722,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266838,"byte_end":8266866,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266871,"byte_end":8266876,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266881,"byte_end":8266928,"line_start":345,"line_end":345,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266933,"byte_end":8266961,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266966,"byte_end":8266969,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8266974,"byte_end":8267042,"line_start":348,"line_end":348,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267047,"byte_end":8267100,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267105,"byte_end":8267110,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267115,"byte_end":8267130,"line_start":351,"line_end":351,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267135,"byte_end":8267142,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267147,"byte_end":8267154,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267479,"byte_end":8267500,"line_start":362,"line_end":362,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267247,"byte_end":8267316,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267321,"byte_end":8267324,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267329,"byte_end":8267403,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267408,"byte_end":8267467,"line_start":361,"line_end":361,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267830,"byte_end":8267847,"line_start":372,"line_end":372,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267594,"byte_end":8267663,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267668,"byte_end":8267671,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267676,"byte_end":8267723,"line_start":368,"line_end":368,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267728,"byte_end":8267764,"line_start":369,"line_end":369,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267769,"byte_end":8267772,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267777,"byte_end":8267818,"line_start":371,"line_end":371,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268308,"byte_end":8268328,"line_start":383,"line_end":383,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8267927,"byte_end":8267995,"line_start":376,"line_end":376,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268000,"byte_end":8268003,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268008,"byte_end":8268078,"line_start":378,"line_end":378,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268083,"byte_end":8268157,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268162,"byte_end":8268224,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268229,"byte_end":8268232,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268237,"byte_end":8268296,"line_start":382,"line_end":382,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268655,"byte_end":8268671,"line_start":393,"line_end":393,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268422,"byte_end":8268490,"line_start":387,"line_end":387,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268495,"byte_end":8268498,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268503,"byte_end":8268550,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268555,"byte_end":8268590,"line_start":390,"line_end":390,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268595,"byte_end":8268598,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268603,"byte_end":8268643,"line_start":392,"line_end":392,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268985,"byte_end":8269006,"line_start":401,"line_end":401,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268749,"byte_end":8268820,"line_start":397,"line_end":397,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268825,"byte_end":8268828,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268833,"byte_end":8268909,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8268914,"byte_end":8268973,"line_start":400,"line_end":400,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269338,"byte_end":8269355,"line_start":411,"line_end":411,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269100,"byte_end":8269171,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269176,"byte_end":8269179,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269184,"byte_end":8269231,"line_start":407,"line_end":407,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269236,"byte_end":8269272,"line_start":408,"line_end":408,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269277,"byte_end":8269280,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269285,"byte_end":8269326,"line_start":410,"line_end":410,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270144,"byte_end":8270151,"line_start":439,"line_end":439,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269435,"byte_end":8269493,"line_start":415,"line_end":415,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269498,"byte_end":8269501,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269506,"byte_end":8269582,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269587,"byte_end":8269608,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269613,"byte_end":8269616,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269621,"byte_end":8269635,"line_start":420,"line_end":420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269640,"byte_end":8269643,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269759,"byte_end":8269787,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269792,"byte_end":8269797,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269802,"byte_end":8269849,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269854,"byte_end":8269882,"line_start":427,"line_end":427,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269887,"byte_end":8269890,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269895,"byte_end":8269953,"line_start":429,"line_end":429,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269958,"byte_end":8269986,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8269991,"byte_end":8270020,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270025,"byte_end":8270030,"line_start":432,"line_end":432,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270035,"byte_end":8270038,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270043,"byte_end":8270078,"line_start":434,"line_end":434,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270083,"byte_end":8270088,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270093,"byte_end":8270108,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270113,"byte_end":8270120,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270125,"byte_end":8270132,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270898,"byte_end":8270901,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270232,"byte_end":8270290,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270295,"byte_end":8270298,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270303,"byte_end":8270369,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270374,"byte_end":8270377,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270382,"byte_end":8270409,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270414,"byte_end":8270417,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270422,"byte_end":8270436,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270441,"byte_end":8270444,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270560,"byte_end":8270588,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270593,"byte_end":8270598,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270603,"byte_end":8270650,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270655,"byte_end":8270683,"line_start":456,"line_end":456,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270688,"byte_end":8270691,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270696,"byte_end":8270754,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270759,"byte_end":8270784,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270789,"byte_end":8270792,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270797,"byte_end":8270832,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270837,"byte_end":8270842,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270847,"byte_end":8270862,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270867,"byte_end":8270874,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270879,"byte_end":8270886,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271445,"byte_end":8271462,"line_start":478,"line_end":478,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8270966,"byte_end":8271024,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271029,"byte_end":8271032,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271037,"byte_end":8271111,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271116,"byte_end":8271189,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271194,"byte_end":8271266,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271271,"byte_end":8271341,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271346,"byte_end":8271384,"line_start":476,"line_end":476,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271389,"byte_end":8271433,"line_start":477,"line_end":477,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271969,"byte_end":8271986,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271604,"byte_end":8271664,"line_start":482,"line_end":482,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271669,"byte_end":8271672,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271677,"byte_end":8271751,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271756,"byte_end":8271829,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271834,"byte_end":8271908,"line_start":486,"line_end":486,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8271913,"byte_end":8271957,"line_start":487,"line_end":487,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272389,"byte_end":8272407,"line_start":499,"line_end":499,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272122,"byte_end":8272181,"line_start":492,"line_end":492,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272186,"byte_end":8272189,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272194,"byte_end":8272241,"line_start":494,"line_end":494,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272246,"byte_end":8272278,"line_start":495,"line_end":495,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272283,"byte_end":8272286,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272291,"byte_end":8272328,"line_start":497,"line_end":497,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272333,"byte_end":8272377,"line_start":498,"line_end":498,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272819,"byte_end":8272837,"line_start":510,"line_end":510,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272550,"byte_end":8272611,"line_start":503,"line_end":503,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272616,"byte_end":8272619,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272624,"byte_end":8272671,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272676,"byte_end":8272708,"line_start":506,"line_end":506,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272713,"byte_end":8272716,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272721,"byte_end":8272758,"line_start":508,"line_end":508,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272763,"byte_end":8272807,"line_start":509,"line_end":509,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273227,"byte_end":8273237,"line_start":519,"line_end":519,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8272974,"byte_end":8273032,"line_start":514,"line_end":514,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273037,"byte_end":8273040,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273045,"byte_end":8273119,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273124,"byte_end":8273200,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273205,"byte_end":8273215,"line_start":518,"line_end":518,"column_start":5,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2071,"byte_end":2078,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"name":"windows","qualname":"::windows","value":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":166}],"decl_id":null,"docs":" Windows only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(windows, feature = \"os-ext\"))","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1958,"byte_end":1998,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/ Windows only extensions.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2085,"byte_end":2113,"line_start":90,"line_end":90,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2173,"byte_end":2181,"line_start":95,"line_end":95,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2188,"byte_end":2218,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2223,"byte_end":2226,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2231,"byte_end":2289,"line_start":98,"line_end":98,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2294,"byte_end":2297,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2448,"byte_end":2451,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation, that `panic!`s the","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2456,"byte_end":2531,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2536,"byte_end":2605,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2610,"byte_end":2658,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2663,"byte_end":2666,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2671,"byte_end":2728,"line_start":107,"line_end":107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2733,"byte_end":2736,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2883,"byte_end":2886,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2891,"byte_end":2967,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":2972,"byte_end":3020,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3025,"byte_end":3028,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3179,"byte_end":3182,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3187,"byte_end":3259,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3271,"byte_end":3276,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3283,"byte_end":3311,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3316,"byte_end":3319,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3324,"byte_end":3365,"line_start":124,"line_end":124,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3370,"byte_end":3373,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3378,"byte_end":3435,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3440,"byte_end":3474,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3479,"byte_end":3507,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3512,"byte_end":3515,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3520,"byte_end":3595,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3600,"byte_end":3650,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3655,"byte_end":3658,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3663,"byte_end":3699,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3704,"byte_end":3707,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3712,"byte_end":3787,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3792,"byte_end":3868,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3873,"byte_end":3923,"line_start":137,"line_end":137,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3928,"byte_end":3931,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3936,"byte_end":3969,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":3974,"byte_end":4017,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4022,"byte_end":4025,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4143,"byte_end":4173,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4178,"byte_end":4218,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4223,"byte_end":4276,"line_start":146,"line_end":146,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4281,"byte_end":4309,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4314,"byte_end":4386,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4391,"byte_end":4419,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4424,"byte_end":4468,"line_start":150,"line_end":150,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4473,"byte_end":4500,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4505,"byte_end":4517,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4522,"byte_end":4529,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4534,"byte_end":4541,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4546,"byte_end":4549,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4554,"byte_end":4623,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4628,"byte_end":4698,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4703,"byte_end":4777,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4782,"byte_end":4808,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4813,"byte_end":4816,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4821,"byte_end":4872,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4877,"byte_end":4880,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4885,"byte_end":4919,"line_start":163,"line_end":163,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4924,"byte_end":4927,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":4932,"byte_end":5008,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5013,"byte_end":5087,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5092,"byte_end":5172,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5177,"byte_end":5252,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5257,"byte_end":5325,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5330,"byte_end":5342,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5347,"byte_end":5350,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5355,"byte_end":5431,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5436,"byte_end":5507,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5512,"byte_end":5515,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5520,"byte_end":5566,"line_start":175,"line_end":175,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5571,"byte_end":5574,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5738,"byte_end":5770,"line_start":179,"line_end":179,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5775,"byte_end":5814,"line_start":180,"line_end":180,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5819,"byte_end":5859,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5864,"byte_end":5894,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5899,"byte_end":5950,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":5955,"byte_end":6010,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6015,"byte_end":6066,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6071,"byte_end":6074,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6079,"byte_end":6156,"line_start":187,"line_end":187,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6161,"byte_end":6239,"line_start":188,"line_end":188,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6244,"byte_end":6260,"line_start":189,"line_end":189,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6265,"byte_end":6300,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6305,"byte_end":6378,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6383,"byte_end":6395,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6400,"byte_end":6407,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6412,"byte_end":6419,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6424,"byte_end":6427,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6432,"byte_end":6504,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6509,"byte_end":6548,"line_start":197,"line_end":197,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6553,"byte_end":6556,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6561,"byte_end":6618,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6623,"byte_end":6626,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6631,"byte_end":6664,"line_start":201,"line_end":201,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6669,"byte_end":6672,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6677,"byte_end":6747,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6752,"byte_end":6828,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6833,"byte_end":6908,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6913,"byte_end":6987,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":6992,"byte_end":7067,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7072,"byte_end":7081,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7086,"byte_end":7089,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7094,"byte_end":7168,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7173,"byte_end":7188,"line_start":211,"line_end":211,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7193,"byte_end":7196,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7201,"byte_end":7244,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7249,"byte_end":7296,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7301,"byte_end":7304,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7468,"byte_end":7486,"line_start":218,"line_end":218,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7491,"byte_end":7521,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7526,"byte_end":7558,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7563,"byte_end":7610,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7615,"byte_end":7650,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7655,"byte_end":7689,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7694,"byte_end":7744,"line_start":224,"line_end":224,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7749,"byte_end":7800,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7805,"byte_end":7858,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7863,"byte_end":7900,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7905,"byte_end":7980,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":7985,"byte_end":8013,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8018,"byte_end":8028,"line_start":230,"line_end":230,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8033,"byte_end":8101,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8106,"byte_end":8172,"line_start":232,"line_end":232,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8177,"byte_end":8180,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8185,"byte_end":8215,"line_start":234,"line_end":234,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8220,"byte_end":8256,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8261,"byte_end":8336,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8341,"byte_end":8394,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8399,"byte_end":8432,"line_start":238,"line_end":238,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8437,"byte_end":8469,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8474,"byte_end":8551,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8556,"byte_end":8603,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8608,"byte_end":8653,"line_start":242,"line_end":242,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8658,"byte_end":8712,"line_start":243,"line_end":243,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8717,"byte_end":8792,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8797,"byte_end":8842,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8847,"byte_end":8873,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8878,"byte_end":8955,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":8960,"byte_end":9031,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9036,"byte_end":9075,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9080,"byte_end":9146,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9151,"byte_end":9203,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9208,"byte_end":9229,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9234,"byte_end":9251,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9256,"byte_end":9292,"line_start":254,"line_end":254,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9297,"byte_end":9310,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9315,"byte_end":9324,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9329,"byte_end":9351,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9356,"byte_end":9361,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9366,"byte_end":9369,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9374,"byte_end":9419,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9424,"byte_end":9471,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9476,"byte_end":9481,"line_start":262,"line_end":262,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9486,"byte_end":9493,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":9498,"byte_end":9505,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":12391,"byte_end":12399,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15330,"byte_end":15338,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15481,"byte_end":15489,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15617,"byte_end":15625,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25365,"byte_end":25369,"line_start":213,"line_end":213,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29584,"byte_end":29588,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31150,"byte_end":31154,"line_start":368,"line_end":368,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31278,"byte_end":31286,"line_start":374,"line_end":374,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":41324,"byte_end":41332,"line_start":633,"line_end":633,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8133895,"byte_end":8133912,"line_start":31,"line_end":31,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8134139,"byte_end":8134150,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8134277,"byte_end":8134280,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8138273,"byte_end":8138284,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8138386,"byte_end":8138389,"line_start":167,"line_end":167,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141319,"byte_end":8141332,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141543,"byte_end":8141556,"line_start":21,"line_end":21,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141576,"byte_end":8141589,"line_start":23,"line_end":23,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141709,"byte_end":8141722,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141825,"byte_end":8141838,"line_start":36,"line_end":36,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\event.rs","byte_start":8142186,"byte_end":8142191,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\event.rs","byte_start":8145337,"byte_end":8145343,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8147239,"byte_end":8147247,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8147645,"byte_end":8147653,"line_start":53,"line_end":53,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8149088,"byte_end":8149097,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8155104,"byte_end":8155113,"line_start":260,"line_end":260,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8156185,"byte_end":8156194,"line_start":291,"line_end":291,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8157908,"byte_end":8157916,"line_start":335,"line_end":335,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8159422,"byte_end":8159430,"line_start":387,"line_end":387,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8160355,"byte_end":8160368,"line_start":422,"line_end":422,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8160378,"byte_end":8160391,"line_start":424,"line_end":424,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8164313,"byte_end":8164326,"line_start":545,"line_end":545,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8169847,"byte_end":8169860,"line_start":694,"line_end":694,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\overlapped.rs","byte_start":8172171,"byte_end":8172181,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\overlapped.rs","byte_start":8172529,"byte_end":8172539,"line_start":30,"line_end":30,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\overlapped.rs","byte_start":8172681,"byte_end":8172691,"line_start":36,"line_end":36,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\overlapped.rs","byte_start":8172716,"byte_end":8172726,"line_start":37,"line_end":37,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\net.rs","byte_start":8175282,"byte_end":8175297,"line_start":57,"line_end":57,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8192843,"byte_end":8192852,"line_start":128,"line_end":128,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8197142,"byte_end":8197151,"line_start":228,"line_end":228,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8198156,"byte_end":8198165,"line_start":257,"line_end":257,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8198307,"byte_end":8198316,"line_start":263,"line_end":263,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8201152,"byte_end":8201161,"line_start":354,"line_end":354,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8202944,"byte_end":8202953,"line_start":416,"line_end":416,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8203070,"byte_end":8203079,"line_start":422,"line_end":422,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8203201,"byte_end":8203210,"line_start":428,"line_end":428,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8203785,"byte_end":8203790,"line_start":449,"line_end":449,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8210702,"byte_end":8210704,"line_start":638,"line_end":638,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8212188,"byte_end":8212198,"line_start":688,"line_end":688,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\waker.rs","byte_start":8172976,"byte_end":8172981,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\mod.rs","byte_start":8130160,"byte_end":8130173,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\mod.rs","byte_start":8130619,"byte_end":8130632,"line_start":72,"line_end":72,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51896,"byte_end":51901,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52988,"byte_end":52993,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":59643,"byte_end":59648,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":60357,"byte_end":60369,"line_start":209,"line_end":209,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62732,"byte_end":62738,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65854,"byte_end":65858,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":66334,"byte_end":66340,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70506,"byte_end":70509,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8214563,"byte_end":8214571,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8215871,"byte_end":8215879,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8216146,"byte_end":8216154,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8217235,"byte_end":8217243,"line_start":167,"line_end":167,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8218123,"byte_end":8218131,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8218436,"byte_end":8218446,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8220762,"byte_end":8220772,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222878,"byte_end":8222889,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8226162,"byte_end":8226173,"line_start":127,"line_end":127,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8226729,"byte_end":8226740,"line_start":151,"line_end":151,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8227478,"byte_end":8227489,"line_start":185,"line_end":185,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8227632,"byte_end":8227643,"line_start":192,"line_end":192,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8227772,"byte_end":8227783,"line_start":199,"line_end":199,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229433,"byte_end":8229442,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8240481,"byte_end":8240490,"line_start":331,"line_end":331,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8241204,"byte_end":8241213,"line_start":368,"line_end":368,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8241686,"byte_end":8241695,"line_start":384,"line_end":384,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8241819,"byte_end":8241828,"line_start":391,"line_end":391,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242164,"byte_end":8242176,"line_start":405,"line_end":405,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246255,"byte_end":8246264,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8251004,"byte_end":8251013,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8251625,"byte_end":8251634,"line_start":195,"line_end":195,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8252447,"byte_end":8252456,"line_start":223,"line_end":223,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8253012,"byte_end":8253021,"line_start":247,"line_end":247,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8253747,"byte_end":8253756,"line_start":281,"line_end":281,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8253899,"byte_end":8253908,"line_start":288,"line_end":288,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8254037,"byte_end":8254046,"line_start":295,"line_end":295,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257783,"byte_end":8257792,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273344,"byte_end":8273353,"line_start":524,"line_end":524,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273909,"byte_end":8273918,"line_start":548,"line_end":548,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8274644,"byte_end":8274653,"line_start":582,"line_end":582,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8274796,"byte_end":8274805,"line_start":589,"line_end":589,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8274934,"byte_end":8274943,"line_start":596,"line_end":596,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1375,"byte_end":1380,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":84}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\lib.rs","byte_start":1445,"byte_end":1448,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":953}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":12391,"byte_end":12399,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15330,"byte_end":15338,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":2160}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15481,"byte_end":15489,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":2186}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\interest.rs","byte_start":15617,"byte_end":15625,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":25365,"byte_end":25369,"line_start":213,"line_end":213,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":29584,"byte_end":29588,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31150,"byte_end":31154,"line_start":368,"line_end":368,"column_start":21,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":31278,"byte_end":31286,"line_start":374,"line_end":374,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\poll.rs","byte_start":41324,"byte_end":41332,"line_start":633,"line_end":633,"column_start":21,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":49},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8133895,"byte_end":8133912,"line_start":31,"line_end":31,"column_start":22,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8134139,"byte_end":8134150,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8134277,"byte_end":8134280,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8138273,"byte_end":8138284,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\afd.rs","byte_start":8138386,"byte_end":8138389,"line_start":167,"line_end":167,"column_start":10,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141319,"byte_end":8141332,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141543,"byte_end":8141556,"line_start":21,"line_end":21,"column_start":22,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141576,"byte_end":8141589,"line_start":23,"line_end":23,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":2231}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141709,"byte_end":8141722,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":2244}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\io_status_block.rs","byte_start":8141825,"byte_end":8141838,"line_start":36,"line_end":36,"column_start":21,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\event.rs","byte_start":8142186,"byte_end":8142191,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\event.rs","byte_start":8145337,"byte_end":8145343,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8147239,"byte_end":8147247,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8147645,"byte_end":8147653,"line_start":53,"line_end":53,"column_start":10,"column_end":18},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8149088,"byte_end":8149097,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8155104,"byte_end":8155113,"line_start":260,"line_end":260,"column_start":10,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8156185,"byte_end":8156194,"line_start":291,"line_end":291,"column_start":15,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8157908,"byte_end":8157916,"line_start":335,"line_end":335,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8159422,"byte_end":8159430,"line_start":387,"line_end":387,"column_start":10,"column_end":18},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8160355,"byte_end":8160368,"line_start":422,"line_end":422,"column_start":22,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8160378,"byte_end":8160391,"line_start":424,"line_end":424,"column_start":6,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8164313,"byte_end":8164326,"line_start":545,"line_end":545,"column_start":10,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\selector.rs","byte_start":8169847,"byte_end":8169860,"line_start":694,"line_end":694,"column_start":15,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\overlapped.rs","byte_start":8172171,"byte_end":8172181,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\overlapped.rs","byte_start":8172529,"byte_end":8172539,"line_start":30,"line_end":30,"column_start":21,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\overlapped.rs","byte_start":8172681,"byte_end":8172691,"line_start":36,"line_end":36,"column_start":22,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\overlapped.rs","byte_start":8172716,"byte_end":8172726,"line_start":37,"line_end":37,"column_start":22,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\net.rs","byte_start":8175282,"byte_end":8175297,"line_start":57,"line_end":57,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8192843,"byte_end":8192852,"line_start":128,"line_end":128,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8197142,"byte_end":8197151,"line_start":228,"line_end":228,"column_start":24,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":730},"to":{"krate":1,"index":9114}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8198156,"byte_end":8198165,"line_start":257,"line_end":257,"column_start":15,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":730},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8198307,"byte_end":8198316,"line_start":263,"line_end":263,"column_start":16,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":730},"to":{"krate":1,"index":3127}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8201152,"byte_end":8201161,"line_start":354,"line_end":354,"column_start":17,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":730},"to":{"krate":0,"index":144}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8202944,"byte_end":8202953,"line_start":416,"line_end":416,"column_start":22,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":730},"to":{"krate":1,"index":9112}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8203070,"byte_end":8203079,"line_start":422,"line_end":422,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":730},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8203201,"byte_end":8203210,"line_start":428,"line_end":428,"column_start":15,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":730},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8203785,"byte_end":8203790,"line_start":449,"line_end":449,"column_start":6,"column_end":11},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8210702,"byte_end":8210704,"line_start":638,"line_end":638,"column_start":6,"column_end":8},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\named_pipe.rs","byte_start":8212188,"byte_end":8212198,"line_start":688,"line_end":688,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\waker.rs","byte_start":8172976,"byte_end":8172981,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\mod.rs","byte_start":8130160,"byte_end":8130173,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":835},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\sys\\windows\\mod.rs","byte_start":8130619,"byte_end":8130632,"line_start":72,"line_end":72,"column_start":10,"column_end":23},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\waker.rs","byte_start":51896,"byte_end":51901,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":52988,"byte_end":52993,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":59643,"byte_end":59648,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\event.rs","byte_start":60357,"byte_end":60369,"line_start":209,"line_end":209,"column_start":37,"column_end":49},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":105},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":62732,"byte_end":62738,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":65854,"byte_end":65858,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":886},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\events.rs","byte_start":66334,"byte_end":66340,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\event\\source.rs","byte_start":70506,"byte_end":70509,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":144}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8214563,"byte_end":8214571,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8215871,"byte_end":8215879,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":2231}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8216146,"byte_end":8216154,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":2244}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8217235,"byte_end":8217243,"line_start":167,"line_end":167,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":914},"to":{"krate":0,"index":144}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8218123,"byte_end":8218131,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8218436,"byte_end":8218446,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\io_source.rs","byte_start":8220762,"byte_end":8220772,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8222878,"byte_end":8222889,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8226162,"byte_end":8226173,"line_start":127,"line_end":127,"column_start":24,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":977},"to":{"krate":0,"index":144}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8226729,"byte_end":8226740,"line_start":151,"line_end":151,"column_start":21,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":977},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8227478,"byte_end":8227489,"line_start":185,"line_end":185,"column_start":24,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":977},"to":{"krate":1,"index":9143}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8227632,"byte_end":8227643,"line_start":192,"line_end":192,"column_start":22,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":977},"to":{"krate":1,"index":9139}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\listener.rs","byte_start":8227772,"byte_end":8227783,"line_start":199,"line_end":199,"column_start":24,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":977},"to":{"krate":1,"index":9141}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8229433,"byte_end":8229442,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8240481,"byte_end":8240490,"line_start":331,"line_end":331,"column_start":15,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8241204,"byte_end":8241213,"line_start":368,"line_end":368,"column_start":24,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1201},"to":{"krate":1,"index":9143}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8241686,"byte_end":8241695,"line_start":384,"line_end":384,"column_start":22,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1201},"to":{"krate":1,"index":9139}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8241819,"byte_end":8241828,"line_start":391,"line_end":391,"column_start":24,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1201},"to":{"krate":1,"index":9141}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\socket.rs","byte_start":8242164,"byte_end":8242176,"line_start":405,"line_end":405,"column_start":6,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8246255,"byte_end":8246264,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8251004,"byte_end":8251013,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1076},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8251625,"byte_end":8251634,"line_start":195,"line_end":195,"column_start":16,"column_end":25},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1076},"to":{"krate":1,"index":3127}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8252447,"byte_end":8252456,"line_start":223,"line_end":223,"column_start":24,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1076},"to":{"krate":0,"index":144}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8253012,"byte_end":8253021,"line_start":247,"line_end":247,"column_start":21,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8253747,"byte_end":8253756,"line_start":281,"line_end":281,"column_start":24,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1076},"to":{"krate":1,"index":9143}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8253899,"byte_end":8253908,"line_start":288,"line_end":288,"column_start":22,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1076},"to":{"krate":1,"index":9139}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\tcp\\stream.rs","byte_start":8254037,"byte_end":8254046,"line_start":295,"line_end":295,"column_start":24,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1076},"to":{"krate":1,"index":9141}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8257783,"byte_end":8257792,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273344,"byte_end":8273353,"line_start":524,"line_end":524,"column_start":24,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":144}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8273909,"byte_end":8273918,"line_start":548,"line_end":548,"column_start":21,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8274644,"byte_end":8274653,"line_start":582,"line_end":582,"column_start":24,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1154},"to":{"krate":1,"index":9143}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8274796,"byte_end":8274805,"line_start":589,"line_end":589,"column_start":22,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1154},"to":{"krate":1,"index":9139}},{"span":{"file_name":"C:\\Users\\Alan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mio-0.7.6\\src\\net\\udp.rs","byte_start":8274934,"byte_end":8274943,"line_start":596,"line_end":596,"column_start":24,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1154},"to":{"krate":1,"index":9141}}]}